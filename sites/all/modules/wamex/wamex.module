<?php
// $Id$

/**
 * @file   WaMEx module.
 */
function wamex_currency_selectbox_contents($vid) {
  $terms = taxonomy_get_tree($vid);
	$output = array();
  foreach ($terms as $data) {
    $output[$data->tid] = $data->name;
  }

  return $output;
}

function wamex_preprocess_page(&$variables){
	$arg = arg();
	//echo "HELLO!W@";
	if ($arg[0] == 'dashboard'){
		// load taxonomy tree for currency
		$variables['show_messages'] = FALSE;
		$currency_taxonomy = taxonomy_vocabulary_machine_name_load('currency');
		$currency_taxonomy_tree = taxonomy_get_tree($currency_taxonomy->vid,0);
		//echo "<pre style='height: 500px; overflow-y: scroll'>".print_r($currency_taxonomy_tree,1)."</pre>";
		// get all term ids
		$currency_tids = array();
		foreach($currency_taxonomy_tree as $term) {
			$currency_tids[] = $term->tid;
		}
		// load all terms
		$currency_terms = taxonomy_term_load_multiple($currency_tids);
		drupal_add_js(array('node' => array('values' => array('field_exchange_rate_to_usd'=>0))),'setting');
		
		// add terms to Drupal.settings
		// access in JS via Drupal.settings.taxonomy.currency
		drupal_add_js(array('taxonomy' => array('currency' => $currency_terms)), 'setting');

	}
}

function ajax_command_callback($form, $form_state) {
  // Collect error.
  $error = form_get_errors();
  // Clear error for all the cases.
  drupal_get_messages();
 // Logic behind error.
	if (!empty($error) && $error['title']) {
   $form_state['rebuild'] = TRUE;
    // Create place holder to display error(class name / ID).
    $selector = '.error_place_holder';
    // Java script function to process error.
    $commands[] = ajax_command_invoke(NULL, "error_javascript_call");
    $commands[] = ajax_command_replace($selector, '<div class="error_place_holder"><div class = "error-msgs">' .    $error['title'] . '</div></div>');
    return array('#type' => 'ajax', '#commands' => $commands);
  }
  else {
    // Same thing you can do it for success.
    // Passing dynamic value to java script.
    $commands[] = ajax_command_invoke(NULL, "success_javascript_call", array(array('url'=>url('some_url_to_redirect_on_success'))));
    return array('#type' => 'ajax', '#commands' => $commands);
  }
}

function project_node_form_ajax() {
	$form = array();
	$currency_vocab = taxonomy_vocabulary_machine_name_load('currency');
	//$currency_opts  = taxonomy_allowed_values(field_info_field('field_currency'));
	$currency_terms  = wamex_currency_selectbox_contents($currency_vocab->vid);
	//echo print_r($currency_terms,1)."<br/>";
	$ary_none = array('_none'=>t('- None -'));
	$currency_opts = $ary_none+$currency_terms;
	//echo $currency_vocab->vid;
	
	$form['#attributes']['class'][] = 'form-container';
	$form['#attributes']['class'][] = 'container-fluid';
	//$form['#validate'] = array('validate_callback');
	$form['#prefix'] = '<div id="view-wamex-projects-canvas" class="hidden">';
	$form['#suffix'] = '</div>';
	$form['title'] = array(
		'#type' => 'textfield',
		'#required' => TRUE,
		'#title' => t('Project Name'),
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		//'#default_value' => ($node->title ? $node->title : NULL),
		'#suffix' => '</div></div>',
	);
	$form['field_location'] = array(
		'#type' => 'textfield',
		'#title' => t('Location'),
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['field_population_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Population'),
		'#default_value' => 0,
		'#element_validate' => array('_node_field_is_number'),
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);
	$form['body'] = array(
		'#type' => 'textarea',
		'#title' => t('Description'),
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['field_author'] = array(
		'#type' => 'textfield',
		'#title' => t('Author'),
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);
	$form['field_discount_rate_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Discount Rate'),
		'#default_value' => 0.0,
		'#element_validate' => array('_node_field_is_number'),
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);
	$form['field_ci_cost_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('CI Cost'),
		'#default_value' => 0.0,
		'#element_validate' => array('_node_field_is_number'),
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);

	$form['field_currency_und'] = array(
		'#title' => t('Currency'),
		'#type' => 'select',
		'#default_value' => 2,	// set to USD
		'#options' => $currency_opts,
		/*array(
			'_none' => t('- None -'),
		),*/
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div>',
	);
	//$form['field_currency']['#options'][] = $currency_opts;
	
	$form['field_exchange_rate_to_usd_und_0_value'] = array(
		'#title' => t('Exchange Rate to USD'),
		'#type' => 'textfield',
		'#default_value' => 1, // set to USD
		'#prefix' => '<div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);

	$form['actions']['submit']['#type'] = 'submit' ;
	$form['actions']['submit']['#value'] = t('Save Project') ;
	$form['actions']['submit']['#ajax']['callback'] =  'form_project_add_callback';
	$form['actions']['submit']['#ajax']['progress']['type'] =  'throbber';

	return $form;
	
}

function form_project_add_callback ($form, $form_state){
	ctools_include('ajax');
	ctools_add_js('ajax-responder');
	$errors = form_get_errors();
	drupal_get_messages();

	$base_path = base_path();
	if(!empty($errors)) { 
		$selector = '#view-dashboard-messages';
		$error_variables = array(
			'items'=> $errors,
			'title'=> 'Add New Project Errors',
			'type'=> 'ul',
		);
		drupal_set_message(theme_item_list($errors),'error');
    //$commands[] = ajax_command_invoke(NULL, "error_javascript_call");
    $commands[] = ajax_command_html($selector, '<div class = "error-msgs">' .theme('status_messages'). '</div>');
		return array('#type' => 'ajax', '#commands' => $commands);
	} 
	else {
		global $user;
		$newnode = new stdClass();
		$newnode->title = $form_state['input']['title'];
		$newnode->language = LANGUAGE_NONE;
		$newnode->type = 'project';
		$newnode->uid = $user->uid;
		$newnode->body[LANGUAGE_NONE][0]['value'] = $form_state['input']['body'];
		$newnode->body[LANGUAGE_NONE][0]['format'] = 'plain_text';
		//$newnode->field_ = $form_state[][];
		$newnode->field_location[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_location'];
		$newnode->field_population[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_population_und_0_value'];
		$newnode->field_author[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_author'];
		$newnode->field_discount_rate[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_discount_rate_und_0_value'];
		$newnode->field_ci_cost[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_ci_cost_und_0_value'];
		$newnode->field_currency[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_currency_und'];
		$newnode->field_exchange_rate_to_usd[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_exchange_rate_to_usd_und_0_value'];
		//$newnode->field_ = $form_state['input'][];
		$newnode = node_submit($newnode);
		
		try {
			node_save($newnode);
			$success = TRUE;
			drupal_set_message(t('<b>'.$newnode->title.'</b> saved!'));
		} 
		catch (Exception $e) {
			// Do your error handling here.
			$success = FALSE;
			drupal_set_message(t($e->getMessage().'<br/>New project not saved!'),'error');
		}
		
		$commands = array();
		if ($success){
			$commands[] = ctools_ajax_command_reload();
			return array('#type' => 'ajax', '#commands' => $commands);
		}
	}
}

function _node_field_is_number($element, &$form_state) {
	if (!is_numeric($element['#value'])){
		form_error($element, t('The "!name" option must be a numeric value.', array('!name' => t($element['#title']))));
	}
}


 /**
 * Implements hook_menu().
 */
function wamex_menu() {

  $items = array();
	$items['get/ajax'] = array(
    'page callback' => 'wamex_ajax_get_ajax', // Render HTML
    //'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'delivery callback' => 'wamex_ajax_callback',  // Magic goes here
  );  
	
  return $items;
}

function wamex_ajax_get_ajax() {
	// The function will receive the array of arguments after the "get/ajax" prefix
	//krumo(func_get_args());
  $path = implode('/', func_get_args());
  $render_string = menu_execute_active_handler($path, FALSE);
  return $render_string;
}

function wamex_ajax_callback($page_callback_result) {
	// Only render content and validates return
  $content = is_string($page_callback_result) ? $page_callback_result : drupal_render($page_callback_result);
  //$html = '<html><head><title></title>' . drupal_get_css() . drupal_get_js() . '</head><body class="jquery-ajax-load">' . $content . '</body></html>';
  print $content;
  //drupal_page_footer();
}

function wamex_user_login(&$edit, $account)
{
  // Your logic will set $redirection to the desired location
  $redirection = 'dashboard';
  
// Unless there is already a redirection going, or the user is trying to reset his password, we redirect to $redirection.
  if (empty($_GET['destination'])
    && !is_null($redirection)
    && (!isset($_POST['form_id']) || $_POST['form_id'] != 'user_pass_reset'))
  {
    $_GET['destination'] = $redirection; // Should we use $edit['redirect'] instead..?
  }
}