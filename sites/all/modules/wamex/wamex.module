<?php
// $Id$

/**
 * @file   WaMEx module.
 */
 
 
 /**
 * Implements hook_menu().
 */
	
function wamex_menu() {

  $items = array();
	
	// render any drupal page via ajax
	$items['get/ajax'] = array(
    'page callback' => 'wamex_ajax_get_ajax', // Render HTML
    //'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'delivery callback' => 'wamex_ajax_callback',  // Magic goes here
  );  
	
	$items['project/add'] = array(
    'title' => 'Add Project',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_project_form'),
    'access arguments' => array('Create new content'),
    'type' => MENU_LOCAL_TASK,
	);
	
	$items['project/add'] = array(
    'title' => 'Add Project',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_project_form'),
    'access arguments' => array('Create new content'),
    'type' => MENU_LOCAL_TASK,
	);
	
	$items['project/edit/%'] = array(
    'title' => 'Edit Project',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_project_form',2),
    'access arguments' => array('Edit own content'),
    'type' => MENU_LOCAL_TASK,
	);
	
  return $items;
}


function wamex_currency_selectbox_contents($vid) {
  $terms = taxonomy_get_tree($vid);
	$output = array();
  foreach ($terms as $data) {
    $output[$data->tid] = $data->name;
  }

  return $output;
}

function wamex_preprocess_page(&$variables){
	$arg = arg();
	if ($arg[0] == 'dashboard'){
		// load taxonomy tree for currency
		$variables['show_messages'] = FALSE;
		$currency_taxonomy = taxonomy_vocabulary_machine_name_load('currency');
		$currency_taxonomy_tree = taxonomy_get_tree($currency_taxonomy->vid,0);
		//echo "<pre style='height: 500px; overflow-y: scroll'>".print_r($currency_taxonomy_tree,1)."</pre>";
		// get all term ids
		$currency_tids = array();
		foreach($currency_taxonomy_tree as $term) {
			$currency_tids[] = $term->tid;
		}
		// load all terms
		$currency_terms = taxonomy_term_load_multiple($currency_tids);
		drupal_add_js(array('node' => array('values' => array('field_exchange_rate_to_usd'=>0))),'setting');
		
		// add terms to Drupal.settings
		// access in JS via Drupal.settings.taxonomy.currency
		drupal_add_js(array('taxonomy' => array('currency' => $currency_terms)), 'setting');

	}
}

function wamex_project_form($form, &$form_state, $nid = null) {
	if ($nid) {
		$node = node_load($nid);
		$title = $node->title;
		$body = $node->body['und'][0]['value'];
		$field_location = $node->field_location['und'][0]['value'];
		$field_population = $node->field_population['und'][0]['value'];
		$field_author = $node->field_author['und'][0]['value'];
		$field_discount_rate = $node->field_discount_rate['und'][0]['value'];
		$field_ci_cost = $node->field_ci_cost['und'][0]['value'];
		$field_currency = $node->field_currency['und'][0]['tid'];
		$field_exchange_rate_to_usd = $node->field_exchange_rate_to_usd['und'][0]['value'];
	} else {
		$node = NULL;
		$title = '';
		$body = '';
		$field_location = '';
		$field_population = 0;
		$field_author = '';
		$field_discount_rate = 0;
		$field_ci_cost = 0;
		$field_currency = NULL;
		$field_exchange_rate_to_usd = NULL;
	}

	$form = array();
	$currency_vocab = taxonomy_vocabulary_machine_name_load('currency');
	//$currency_opts  = taxonomy_allowed_values(field_info_field('field_currency'));
	$currency_terms  = wamex_currency_selectbox_contents($currency_vocab->vid);
	$ary_none = array('_none'=>t('- None -'));
	$currency_opts = $ary_none+$currency_terms;

	$form['#attributes']['class'][] = 'form-container';
	$form['#attributes']['class'][] = 'container-fluid';
	$form['title'] = array(
		'#type' => 'textfield',
		'#required' => TRUE,
		'#title' => t('Project Name'),
		'#default_value' => $title,
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['field_location'] = array(
		'#type' => 'textfield',
		'#title' => t('Location'),
		'#default_value' => $field_location,
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['field_population_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Population'),
		'#default_value' => $field_population,
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);
	$form['body'] = array(
		'#type' => 'textarea',
		'#title' => t('Description'),
		'#default_value' => $body,
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['field_author'] = array(
		'#type' => 'textfield',
		'#title' => t('Author'),
		'#default_value' => $field_author,
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);
	$form['field_discount_rate_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Discount Rate'),
		'#default_value' => $field_discount_rate,
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);
	$form['field_ci_cost_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('CI Cost'),
		'#default_value' => $field_ci_cost,
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);
	$form['field_currency_und'] = array(
		'#title' => t('Currency'),
		'#type' => 'select',
		'#default_value' => $field_currency,
		'#options' => $currency_opts,
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div>',
	);
	$form['field_exchange_rate_to_usd_und_0_value'] = array(
		'#title' => t('Exchange Rate to USD'),
		'#type' => 'textfield',
		'#default_value' => $field_exchange_rate_to_usd,
		'#prefix' => '<div class="col-sm-6" id="field-exchange-rate-to-usd-add-more-wrapper">',
		'#suffix' => '</div></div>',
	);

	$form['actions']['submit']['#type'] = 'submit';
	$form['actions']['submit']['#ajax']['type'] = 'throbber';
	$form['actions']['submit']['#ajax']['callback'] = 'wamex_project_form_submit';
	
	if ($nid){
		// edit existing
		$form['nid']['#type'] = 'hidden';
		$form['nid']['#value'] = $nid;
		$form['actions']['submit']['#value'] = t('Update Project');
	} else {
		// add new
		$form['actions']['submit']['#value'] = t('Save Project');
	}
	
	return $form;
	
}

function wamex_project_form_submit($form, &$form_state){
	ctools_include('ajax');
	ctools_add_js('ajax-responder');
	$errors = form_get_errors();
	$commands = array();
	drupal_get_messages();

	// check for form errors
	if(!empty($errors)) { 
		// if there are errors, display them in the container with id=$selector
		$selector = '#dashboard-messages';
		$error_variables = array(
			'items'=> $errors,
			'title'=> 'Add New Project Errors',
			'type'=> 'ul',
		);
		drupal_set_message(theme_item_list($errors),'error');
		drupal_set_message('this','error');
		//$form_state['redirect'] = 'dashboard';
    $commands[] = ajax_command_html($selector, '<div class = "error-msgs">' .theme('status_messages'). '</div>');
		return array('#type' => 'ajax', '#commands' => $commands);
	} 
	else {
		// if there are no errors, attempt to save the node
		//drupal_set_message('form has no errors','status');
		//$success = NULL;
		if (empty($form_state['values']['nid'])){
			// add new node
			global $user;
			$newnode = new stdClass();
			$newnode->title = $form_state['input']['title'];
			$newnode->language = LANGUAGE_NONE;
			$newnode->type = 'project';
			$newnode->uid = $user->uid;
			$newnode->body[LANGUAGE_NONE][0]['value'] = $form_state['input']['body'];
			$newnode->body[LANGUAGE_NONE][0]['format'] = 'plain_text';
			$newnode->field_location[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_location'];
			$newnode->field_population[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_population_und_0_value'];
			$newnode->field_author[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_author'];
			$newnode->field_discount_rate[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_discount_rate_und_0_value'];
			$newnode->field_ci_cost[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_ci_cost_und_0_value'];
			$newnode->field_currency[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_currency_und'];
			$newnode->field_exchange_rate_to_usd[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_exchange_rate_to_usd_und_0_value'];
			$newnode = node_submit($newnode);

			try {
				node_save($newnode);
				$success = TRUE;
				drupal_set_message(t('Projet <b>'.$newnode->title.'</b> created.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t($e->getMessage().'<br/>New project not saved.'),'error');
			}
		}
		else {
			// update existing node
			$node = node_load($form_state['values']['nid']);
			$node->title = $form_state['input']['title'];
			$node->language = LANGUAGE_NONE;
			$node->body[LANGUAGE_NONE][0]['value'] = $form_state['input']['body'];
			$node->field_location[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_location'];
			$node->field_population[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_population_und_0_value'];
			$node->field_author[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_author'];
			$node->field_discount_rate[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_discount_rate_und_0_value'];
			$node->field_ci_cost[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_ci_cost_und_0_value'];
			$node->field_currency[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_currency_und'];
			$node->field_exchange_rate_to_usd[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_exchange_rate_to_usd_und_0_value'];
			$node = node_submit($node);
			try {
				node_save($node);
				$success = TRUE;
				drupal_set_message(t('Project <b>'.$node->title.'</b> updated.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t($e->getMessage().'<br/>Project not updated.'),'error');
			}
		}

		if ($success){
			$form_state['redirect'] = 'dashboard';
			$commands[] = ctools_ajax_command_reload();
			return array('#type' => 'ajax', '#commands' => $commands);
		} 
	}
	//return;
}

function wamex_ajax_get_ajax() {
	// The function will receive the array of arguments after the "get/ajax" prefix
  $path = implode('/', func_get_args());
  $render_string = menu_execute_active_handler($path, FALSE);
  return $render_string;
}

function wamex_ajax_callback($page_callback_result) {
	// Only render content and validates return
  $content = is_string($page_callback_result) ? $page_callback_result : drupal_render($page_callback_result);
  print $content;
}

function wamex_user_login(&$edit, $account)
{
  // set $redirection to the desired location
  $redirection = 'dashboard';
  
	// Unless there is already a redirection going, or the user is trying to reset his password, we redirect to $redirection.
  if (empty($_GET['destination'])
    && !is_null($redirection)
    && (!isset($_POST['form_id']) || $_POST['form_id'] != 'user_pass_reset'))
  {
    $_GET['destination'] = $redirection; // Should we use $edit['redirect'] instead..?
  }
}