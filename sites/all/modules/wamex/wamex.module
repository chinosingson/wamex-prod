<?php
// $Id$

/**
 * @file   WaMEx module.
 */

 require_once DRUPAL_ROOT .'/'. drupal_get_path('module','wamex').'/wamex_math.php';
 
/**
* Implementation of hook_permission().
*/
function wamex_permission() {
	$items = array();
  $items['add project custom'] = array(
		'title' => t('<em>Project</em>: Add new project.'),
		'description' => t('Allow users to add new WaMEx projects'),
	);
	
	$items['edit project custom'] = array(
		'title' => t('<em>Project</em>: Edit existing project.'),
		'description' => t('Allow users to edit WaMEx projects'),
	);
	
	$items['delete project custom'] = array(
		'title' => t('<em>Project</em>: Delete existing project.'),
		'description' => t('Allow users to delete WaMEx projects'),
	);
	
  $items['add loading custom'] = array(
		'title' => t('<em>Loading</em>: Add new loading.'),
		'description' => t('Allow users to add new WaMEx loadings'),
	);
	
	$items['edit loading custom'] = array(
		'title' => t('<em>Loading</em>: Edit existing loading.'),
		'description' => t('Allow users to edit WaMEx loadings'),
	);

	$items['delete loading custom'] = array(
		'title' => t('<em>Loading</em>: Delete existing loading.'),
		'description' => t('Allow users to delete WaMEx loadings'),
	);
	
  $items['add scenario custom'] = array(
		'title' => t('<em>Scenario</em>: Add new scenario.'),
		'description' => t('Allow users to add new WaMEx scenarios'),
	);
	
	$items['edit scenario custom'] = array(
		'title' => t('<em>Scenario</em>: Edit existing scenario.'),
		'description' => t('Allow users to edit WaMEx scenarios'),
	);

	$items['delete scenario custom'] = array(
		'title' => t('<em>Scenario</em>: Delete existing scenario.'),
		'description' => t('Allow users to delete WaMEx scenarios'),
	);

	/*$items['administer wamex settings'] = array(
		'title' => t('<em>Settings</em>: Modify WaMEx module settings.'),
		'description' => t('Allow users to change WaMEx module settings'),
	);*/
	
	return $items;
}

/*
 * Implements hook_admin()
 */

/*function wamex_admin (){
	$form = array();
	
	$form['wamex_tech_debug'] = array(
		'#type' => 'checkbox',
		'#title' => t('Technology Selection Debug Mode'),
		'#options' => array(0 => FALSE, 1 => TRUE),
		'#default_value' => variable_get('wamex_tech_debug', 3),
		'#description' => t("Enable display of wastewater technology parameter values while testing for suitability."),
	);
	
	return system_settings_form($form);
	
}*/

function wamex_init() {
  drupal_add_js('misc/jquery.form.js');
  drupal_add_library('system','drupal.ajax');
}
 
 /**
 * Implements hook_menu().
 */
 
function wamex_menu() {

  $items = array();
	
	// render any drupal page via ajax
	$items['get/ajax'] = array(
    'page callback' => 'wamex_ajax_get_ajax', // Render HTML
    //'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'delivery callback' => 'wamex_ajax_callback',  // Magic goes here
  );  
	
	// project functions
	$items['project/add'] = array(
    'title' => 'Add Project',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_project_form'),
    'access arguments' => array('add project custom'),
    'type' => MENU_LOCAL_TASK,
	);
	
	$items['project/edit/%'] = array(
    'title' => 'Edit Project',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_project_form',2),
    'access arguments' => array('edit project custom'),
    'type' => MENU_CALLBACK,
	);
	
	$items['project/delete/%'] = array(
    'title' => 'Delete Project',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_project_delete_confirm',2),
    'access arguments' => array('delete project custom'),
    'type' => MENU_CALLBACK,
	);
	
	
	// loading functions
	$items['loading/add/%'] = array(
		'title' => 'Add Loading',
		'page callback' => 'wamex_loading_form_render',
		'page arguments' => array('wamex_loading_form',NULL,2),
		//'page callback' => 'drupal_get_form',
		//'page arguments' => array('wamex_loading_form',NULL,2),
		'access arguments' => array('add loading custom'),
		'type' => MENU_LOCAL_TASK,
	);
	$items['loading/edit/%'] = array(
		'title' => 'Edit Loading',
		'page callback' => 'wamex_loading_form_render',
		'page arguments' => array('wamex_loading_form',2,NULL),
		//'page callback' => 'drupal_get_form',
		//'page arguments' => array('wamex_loading_form',2, NULL),
		'access arguments' => array('edit loading custom'),
		'type' => MENU_CALLBACK,
	);
	$items['loading/delete/%'] = array(
		'title' => 'Delete Loading',
		'page callback' => 'drupal_get_form',
		//'page arguments' => array('wamex_loading_delete_confirm',2,107),
		'page arguments' => array('wamex_loading_delete_confirm',2,NULL),
		//'page arguments' => array('wamex_loading_delete_confirm',2,2),
		'access arguments' => array('delete loading custom'),
		'type' => MENU_CALLBACK,
	);
	
	$items['loading/technologies'] = array(
		'title' => 'Loading Technologies',
		//'page callback' => 'wamex_get_tech_data',
		'page callback' => 'wamex_display_tech',
		'access callback' => TRUE,
		'access arguments' => array('Edit own content'),
		'type' => MENU_CALLBACK,
	);

	$items['wamex-ajax-tech'] = array(
		'page callback' => 'wamex_ajax_test',
		'access callback' => 'user_access',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
	);
	
	// scenario functions
	$items['scenario/add/%'] = array(
		'title' => 'Add scenario',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_scenario_form',NULL,2),
		//'page callback' => 'drupal_get_form',
		//'page arguments' => array('wamex_scenario_form',NULL,2),
		'access arguments' => array('add scenario custom'),
		'type' => MENU_LOCAL_TASK,
	);
	$items['scenario/edit/%'] = array(
		'title' => 'Edit scenario',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_scenario_form',2,NULL),
		//'page callback' => 'drupal_get_form',
		//'page arguments' => array('wamex_scenario_form',2, NULL),
		'access arguments' => array('edit scenario custom'),
		'type' => MENU_CALLBACK,
	);
	$items['scenario/delete/%'] = array(
		'title' => 'Delete scenario',
		'page callback' => 'drupal_get_form',
		//'page arguments' => array('wamex_scenario_delete_confirm',2,107),
		'page arguments' => array('wamex_scenario_delete_confirm',2,NULL),
		//'page arguments' => array('wamex_scenario_delete_confirm',2,2),
		'access arguments' => array('delete scenario custom'),
		'type' => MENU_CALLBACK,
	);
	
	
	/*$items['admin/settings/wamex'] = array(
		'title' => 'WaMEx Settings',
		'description' => 'Administrative settings for the WaMEx Module.',
		'page callback' => 'drupal_get_form',
    'page arguments' => array('wamex_admin'),
		'access arguments' => array('administer wamex settings'),
		'type' => MENU_NORMAL_ITEM,
	);*/

	
	/*$items['loading/techs/all'] = array(
		'title' => 'All Technologies',
		'page callback' => 'wamex_get_all_tech',
		'access arguments' => array('Edit own content'),
		//'type' => MENU_DEFAULT_LOCAL_TASK,
	);*/
	
	/*$items['project/effluents/%'] = array(
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wamex_project_effl_form',2),
		'access arguments' => array('Edit own content'),
		'type' => MENU_CALLBACK,
	);*/
	
	/*$items['test/table'] = array(
		'title' => 'Test table',
		'page callback' => 'wamex_display_table',
		'access arguments' => array('administer WaMEx technology'),
		'type' => MENU_CALLBACK,
	);*/
	
  return $items;
}


/*function wamex_display_table() {
	$name = 'chino';
	$surname = 'singson';
	$row = array(
		'title' => array(
			'data' => $name . ' ' . $surname,
			'class' => array('myClass')
		),
		//'date' => date('Y-m-d', $account->created),
		'name' => $name . ' ' . $surname,
	);
	$output = theme('table',array('header'=>array(),'rows'=>$row));

	return $output;
}*/

function make_range($value,$digits){
  $range = "";
  $low = "";
  $high = "";
  if ($value < 10) {
    $digits+=2;
  } elseif ($value > 10 && $value < 100) {
    $digits+=1;
  }
  
  $l = $value;
  $h = $value*1.2;
  
  $low = number_format(round($l,$digits),0);
  $high = number_format(round($h*1.2,$digits),0);
  
  if ($low == $high) {
    $range .= $low;
  } else {
    $range .= $low." to ".$high;
  }
  return $range;
}

function wamex_get_tech_data($techArgs){
  global $debug;
  //$debug = TRUE;
  $aryTechArgs = explode('&',$techArgs);
  $tech_json = array();
  $output = "";
  $debug_output = "";
  $output .= $techArgs;
	$str_loadings  = $aryTechArgs[0];
	$str_standards = $aryTechArgs[1];
	$str_popeq = $aryTechArgs[2];
	$str_scenario = $aryTechArgs[3];
	$str_land_cost = $aryTechArgs[4];
	$str_exch_rate = $aryTechArgs[5];
	$str_curr_code = $aryTechArgs[6];
  $node_id = $aryTechArgs[7];
  $node = node_load($node_id);
  if($node) { $pop = $node->field_population[LANGUAGE_NONE][0]['value']; }
  else { $pop = null; }
	$ary_loadings_init  = explode('|',$str_loadings); 	// check for 6 items
	$ary_standards_init = explode('|',$str_standards);	// check for 5 items
	// set loading and standards arrays
	$arrayAverageLoad = array(
		'ADWF' => $ary_loadings_init[0],
		'COD'  => $ary_loadings_init[1],
		'BOD5' => $ary_loadings_init[2],
		'N'    => $ary_loadings_init[3],
		'P'    => $ary_loadings_init[4], 
		'TSS'  => $ary_loadings_init[5]
	);
	
	$arrayStandards = array(
		//'name' => "Malaysia",
		'COD'  => $ary_standards_init[0],
		'BOD5' => $ary_standards_init[1],
		'N'    => $ary_standards_init[2],
		'P'    => $ary_standards_init[3],
		'TSS'  => $ary_standards_init[4],
	);
  
  $techs = wamex_select_tech($arrayAverageLoad,$arrayStandards,$str_popeq,$str_scenario);
  $output .= count ($techs)." technologies selected<br/>";
  // $time = microtime(true) - $_SERVER["REQUEST_TIME_FLOAT"];
  // $output .= "select tech process time: {$time}<br/>";  

	//$scenario_sorted_techs = array();
	if ($str_scenario!=""){
		if ($debug) {
			$debug_output .= "<b>Suitable Technologies: ".count($techs)." pass tests.</b><br/>";
			$debug_output .= "<b>Determining Scenario Scores</b><br/><pre>";
			$debug_output .= "<b>Tech|  Land  |  Chem  | Energy |  O&M   | Shock  | Flows  | Toxic  | Sludge | Score  </b><br/>";
			$scenario_weights = explode("|",$str_scenario);
			foreach($scenario_weights as $key=>$weight){
				$scenario_weights[$key] = str_replace("_","&nbsp;",str_pad($weight,8,"_",STR_PAD_BOTH));
			}
			$debug_output .= "xxxx|".implode("|",$scenario_weights)."|xxxxxxxx<br/>";
		}
		$score = array();

    // get technology scores
		foreach($techs as $key=>$tech){
			$techs[$key]['score'] = wamex_scenario_score($tech,$str_scenario);;
		}
    
    // sort technologies by score : $techs[$key]['score']
    usort ($techs, function($a, $b){
      return $b['score'] > $a['score'] ? 1 : -1;
    });
		if ($debug) {
			$debug_output .= "</pre>";
		}
    
    //$output .= "scoring<br/><pre>".print_r($techs,1)."</pre><br/>";
    //$output .= "scoring<br/><pre>".print_r($score,1)."</pre><br/>";

		if ($debug) {
			$debug_output .= "<b>Sorting Technologies by Scenario Score (High to Low)</b><br/><pre>";
			//echo print_r($scenario_sorted_techs,1)."<br/>";
		}

		/* foreach ($scenario_sorted_techs as $tech_sorted){
			$tech_ids[] = $tech_sorted['id'];
		} */
		if ($debug) {
			$debug_output .= "<b>Tech| Score  | Name</b><br/>";
			//foreach($scenario_sorted_techs as $tech_s){
			foreach($techs as $tech_s){
				$debug_output .= str_replace("_","&nbsp;",str_pad($tech_s['tid'],4,"_",STR_PAD_BOTH))."|<b>".number_format($tech_s['score'],6)."</b>|".$tech_s['name']."<br/>";
			}
			//echo print_r($scenario_sorted_techs_rev,1)."<br/>";
			$debug_output .= "</pre>";
		}
	} else {
		if ($debug) {
      $debug_output .= "<b>Suitable Technologies: ".count($techs)." pass tests.</b><br/>";
			$debug_output .= "<pre>";
			$debug_output .= "<b>Tech| Name</b><br/>";
      //$tech_ids[] = $tech['tid'];
      if ($debug){ 
        foreach ($techs as $tech){
          $debug_output .= str_replace("_","&nbsp;",str_pad($tech['tid'],4,"_",STR_PAD_BOTH))."|".$tech['name']."<br/>";
        }
      }
		}
		if ($debug) $debug_output .= "</pre>";
	}
  
  
  if ($debug) echo $debug_output."<br/>";
  //$output .= "after sorting:<br/><pre class='col-sm-6'>".print_r($techs,1)."</pre><br/>";
  //$output .= "<pre>".print_r($scenario_sorted_techs,1)."</pre><br/>";
  /* $select = db_select('wamex_technology', 'wt'); //->extend('Tablesort');
  //$fields = array('tid', 'name','cod', 'max_bod', 'max_n_p', 'max_n_a', 'max_p_p', 'max_p_a', 'max_tss_p', 'max_tss_a');
  $query = $select->fields('wt') //, $fields)
              //->orderByHeader($header)
             ->condition('tid', $tech_ids,'IN')
             ->extend('TableSort');
             //->orderByHeader($header);

  if ($str_scenario!=""){
    //if($debug) echo "adding ORDER BY FIELD query condition<br/>";
    $query->orderBy('FIELD(tid,'.implode(",",$tech_ids).')');
  }

  $results = $query->execute(); */
  //$rows = array();
  $destination = drupal_get_destination();
  
  $popeq_threshold = wamex_popeq_threshold($str_popeq);
  $popeq_shortcut = $popeq_threshold['shortcut'];

  //foreach ($results as $key => $val) {
  foreach ($techs as $key => $val) {
    //if($str_scenario!="") $tech_score = $scenario_sorted_techs[$key]['score']; else $tech_score = "";
    //if($str_scenario!=""){
    $financials_factor = 1/1000000;
    $landreq_factor = 1/1000;
    $tech_id = $val['tid'];
    $tech_name = $val['name'];
    $score_value = $val['score'];
    $capex_tot = wamex_capex($str_popeq,$val['capex_'.$popeq_shortcut[0]],$val['capex_'.$popeq_shortcut[1]])*$pop*$str_exch_rate;
    //$capex_range = ($capex_tot > 0 ? number_format(round($capex_tot,-2))." to ".number_format(round($capex_tot*1.2,-2)) : "-"); //."-".$capex_tot-$capex_tot*(0.2);
    $capex_range = ($capex_tot > 0 ? make_range($capex_tot,-2) : "-"); //."-".$capex_tot-$capex_tot*(0.2);
    $opex_tot = wamex_opex($str_popeq,$val['opex_'.$popeq_shortcut[0]],$val['opex_'.$popeq_shortcut[1]])*$pop*$str_exch_rate;
    $opex_range = ($opex_tot > 0 ? make_range($opex_tot,-2): "-");
    $capex_per_capita = wamex_capex($str_popeq,$val['capex_'.$popeq_shortcut[0]],$val['capex_'.$popeq_shortcut[1]])*$str_exch_rate; //*$str_popeq;
    $capex_range_per_capita = ($capex_tot > 0 ? make_range($capex_per_capita,-2) : "-");
    $opex_per_capita = wamex_opex($str_popeq,$val['opex_'.$popeq_shortcut[0]],$val['opex_'.$popeq_shortcut[1]])*$str_exch_rate; //*$str_popeq;
    $opex_range_per_capita =  ($opex_tot > 0 ? make_range($opex_per_capita,-2) : "-");
    $ary_land_values = array($val['land_200'],$val['land_1k']);
    $landreq = wamex_land_req($str_popeq,$ary_land_values);
    $landreq_display = ($landreq > 0 ? number_format($landreq) : "-");
    $land_cost = $landreq*$str_land_cost*$str_exch_rate;
    $land_cost_range = ($land_cost > 0 ? make_range($land_cost,-2) : "-");
    $land_cost_per_capita = $land_cost/$pop;
    $land_costs_range_per_capita = ($land_cost_per_capita > 0 ? make_range($land_cost_per_capita,-2) : "-");
    $tot_inv = $capex_tot+$land_cost;
    $tot_inv_range = ($tot_inv > 0 ? make_range($tot_inv,-2) : "-");
    $tot_inv_per_capita = $tot_inv/$pop;
    $tot_inv_range_per_capita = ($tot_inv > 0 ? make_range($tot_inv_per_capita,-2) : "-");
    
    // total investment

    $cod_value = (!is_null($val['cod']) ? (1-$val['cod'])*$arrayAverageLoad['COD'] : null);
    $bod5_value = (!is_null($val['max_bod']) ? (1-$val['max_bod'])*$arrayAverageLoad['BOD5'] : null);
    
    $n_a_value = $val['max_n_a'];	// absolute efficiency value
    $n_p_value = $val['max_n_p'];	// percentage
    $n_value = (!is_null($n_a_value) ? $n_a_value : (!is_null($n_p_value) ? (1-$n_p_value)*$arrayAverageLoad['N'] : null ));
    
    $p_a_value = $val['max_p_a'];	// absolute efficiency value
    $p_p_value = $val['max_p_p'];	// percentage
    $p_value = (!is_null($p_a_value) ? $p_a_value : (!is_null($p_p_value) ? (1-$p_p_value)*$arrayAverageLoad['N'] : null ));
    
    $tss_a_value = $val['max_tss_a'];	// absolute efficiency value
    $tss_p_value = $val['max_tss_p'];	// percentage
    $tss_value = (!is_null($tss_a_value) ? $tss_a_value : (!is_null($tss_p_value) ? (1-$tss_p_value)*$arrayAverageLoad['N'] : null ));

    $cod_display = (!is_null($cod_value) ? number_format($cod_value,1) : "-");
    $bod5_display = (!is_null($bod5_value) ? number_format($bod5_value,1) : "-");
    $n_display = (!is_null($n_value) ? number_format($n_value,1) : "-");
    $p_display = (!is_null($p_value) ? number_format($p_value,1) : "-");
    $tss_display = (!is_null($tss_value) ? number_format($tss_value,1) : "-");

    $tech_json[] = array(
      "tid"=>$tech_id,
      "name"=>$tech_name,
      "score"=>$score_value,
      "capex"=>$capex_range,
      "capexPC"=>$capex_range_per_capita,
      "opex"=>$opex_range,
      "opexPC"=>$opex_range_per_capita,
      "landReqt"=>$landreq_display,
      "landCost"=>$land_cost_range,
      "landCostPC"=>$land_costs_range_per_capita,
      "totInv"=>$tot_inv_range,
      "totInvPC"=>$tot_inv_range_per_capita,
      "cod"=>$cod_value,
      "bod5"=>$bod5_value,
      "n"=>$n_value,
      "p"=>$p_value,
      "tss"=>$tss_value,
    );
			
    //$rows[] = $ary_values;
  }
  $tech_values['args'] = $aryTechArgs;
  $tech_values['table'] = $tech_json;
  
  //$output .= "<pre>".print_r($rows,1)."</pre><br/>";
  $time = microtime(true) - $_SERVER["REQUEST_TIME_FLOAT"];
  $output .= "process data process time: {$time}<br/>";
  $output .= "<pre class='col-sm-6'>TECH_VALUES<br/>".print_r($tech_values,1)."</pre>";
  $output .= "<pre class='col-sm-6'>TECH_VALUES (JSON)<br/>".json_encode($tech_values, JSON_PRETTY_PRINT)."</pre>";
  //$node = node_load(107);
  $node = node_load($node_id);
  if ($node){
    $output .= "node (".$node_id.") loaded<br/>";
    $node->field_technology_data[LANGUAGE_NONE][0]['value'] = json_encode($tech_values);
    node_save($node);
    $output .= "hello: ".print_r($node->field_technology_data[LANGUAGE_NONE][0]['value'],1)."<br/>";
    //$output .= "merong node: ".$node_id."<br/>";
  } /*else {
    $output .= "walang node!<br/>";
    
  }*/
  
  //$ret_ary['techArgs'] = $techArgs;
  $ret_ary = $tech_values;
  //return $output;
  return $ret_ary;
}



function wamex_display_tech($techs, $static = null){
	global $debug;
	$output = "";
  if ($static){
    $techInfo = $techs;
    //$output .= "1<br/>";
  } else {
    $techInfo = wamex_get_tech_data($techs);
    //$output .= "2<br/>";
  }
	$output .= "<div class=\"table-responsive\">";
	//$output .= "<pre>".print_r($techInfo,1)."<br/></pre>"; //$techArgs;
	//$output .= "<pre>Loadings: ".$str_loadings."</pre>";
	//$output .= "<pre>Standards: ".$str_standards."</pre>";
	//$output .= "<pre>PE: ".$str_popeq."</pre>";
	//$output .= "<pre>Scenario: ".$str_scenario."</pre>";
	//$output .= "<pre>Land Cost: ".$str_land_cost."</pre>";
	
  $str_popeq = $techInfo['args'][2];
  $str_scenario = $techInfo['args'][3];
  $str_curr_code = $techInfo['args'][6];
  $count_techs = count($techInfo['table']);
	
	//$output .= "<pre>".print_r($techInfo['table'][0],1)."</pre>";
	//$output .= "<pre>".print_r($scenario_sorted_techs,1)."</pre>";
	
	$output .= '<div class="table-responsive">';
	if ($count_techs>0){
		$output .= "<div class=\"row\">";
		$output .= "<div class=\"col-sm-12 col-md-3 col-lg-3\" id=\"tech-count\">Displaying ".$count_techs." Technology options.<br/>Population Equivalent: ".number_format($str_popeq,2)."</div>";
		$output .= "<div class=\"col-sm-12 col-md-8 col-lg-8 row\">";
		if ($str_scenario!=""){
			$output .= "<div class=\"tech-display-controls\"><input type=\"radio\" name=\"tech-toggle-display\" id=\"tech-toggle-fn-attr\" checked=\"checked\" value=\"fn\"><label for=\"tech-toggle-fn-attr\">Financial Info</label></div>";
			$output .= "<div class=\"tech-display-controls\"><input type=\"checkbox\" id=\"tech-toggle-fn-per-capita\" name=\"tech-toggle-fn-per-capita\"><label id=\"label-toggle-per-capita\" for=\"tech-toggle-fn-per-capita\">Per Capita</label></div>";
			$output .= "<div class=\"tech-display-controls\"><input type=\"radio\" name=\"tech-toggle-display\" id=\"tech-toggle-ww-attr\" value=\"ww\"><label for=\"tech-toggle-ww-attr\">Efficiency</label></div>";
			//$output .= "<div class=\"tech-display-controls\">";	// design horizon
			//$output .= "<input type=\"number\" id=\"tech-design-horizon\" name=\"tech-design-horizon\" class=\"input-sm form-control form-text\" min=\"1\" max=\"99\" size=\"5\"><label id=\"label-tech-design-horizon\" for=\"tech-design-horizon\">Design Horizon</label>";
			//$output .= "</div>";
			//$output .= "<div class=\"tech-display-controls\">";	// inflation rate
			//$output .= "<input type=\"number\" id=\"tech-inflation-rate\" name=\"tech-inflation-rate\" class=\"input-sm form-control form-text\" min=\"0\" max=\"100\" size=\"5\"><label id=\"label-tech-inflation-rate\" for=\"tech-inflation-rate\">Inflation Rate</label>";
			//$output .= "</div>";
		}
		$output .= "</div>";
		$output .= "</div>";
		
		$header = array();
		
		// COLUMN HEADINGS - Financial Info
    $str_cost_units = "<span class=\"tech-financial-attr-label-unit label-unit\">(".$str_curr_code.")</span>";
    $str_cost_units_pc = "<span class=\"tech-financial-attr-pc-label-unit label-unit\">(".$str_curr_code."/capita)</span>";
    $score_header = "Score<br/>&nbsp;"; 
    $capex_header = "CapEx<br/><span class=\"tech-financial-attr-label-unit label-unit\">(".$str_curr_code.")</span><span class=\"tech-financial-attr-pc-label-unit label-unit\">(".$str_curr_code."/capita)</span>";
    $opex_header = "OpEx<br/><span class=\"tech-financial-attr-label-unit label-unit\">(".$str_curr_code."/year)</span><span class=\"tech-financial-attr-pc-label-unit label-unit\">(".$str_curr_code."/capita/year)</span>";
    $land_req_header = "Land&nbsp;Req't<br/><span class=\"label-unit\">(sq m)</span>";
    $land_cost_header = "Land Cost<br/><span class=\"tech-financial-attr-label-unit label-unit\">(".$str_curr_code.")</span><span class=\"tech-financial-attr-pc-label-unit label-unit\">(".$str_curr_code."/capita)</span>";
    $tot_inv_header = "Total&nbsp;Investment<br/><span class=\"tech-financial-attr-label-unit label-unit\">(".$str_curr_code.")</span><span class=\"tech-financial-attr-pc-label-unit label-unit\">(".$str_curr_code."/capita)</span>";
    
		$header[] = array('data' => t('Name<br/>&nbsp;'), 'class'=>array('col-md-3','tech-attributes','tech-name','col-name'),'sort'=>'asc');
    $header[] = array('data'=>t($score_header), 'class'=>array('col-md-1','tech-attributes','tech-score'));
    $header[] = array('data'=>t($capex_header), 'class'=>array('col-md-1','tech-attributes','tech-financial-attr','tech-capex'));
    $header[] = array('data'=>t($opex_header), 'class'=>array('col-md-1','tech-attributes','tech-financial-attr','tech-opex'));
    $header[] = array('data'=>t($land_req_header), 'class'=>array('col-md-1','tech-attributes','tech-financial-attr','tech-landreq'));
    $header[] = array('data'=>t($land_cost_header), 'class'=>array('col-md-1','tech-attributes','tech-financial-attr','tech-landcost'));
    $header[] = array('data'=>t($tot_inv_header), 'class'=>array('col-md-1','tech-attributes','tech-financial-attr','tech-totinv'));
		
    // COLUMN HEADINGS - Efficiency
		$header[] = array('data' => t('COD<br/><span class="label-unit">(mg/&#x2113;)</span>'), 'class'=>array('col-md-1','tech-attributes','tech-ww-attr','tech-attributes-cod','tech-cod','col-cod'));
		$header[] = array('data' => t('BOD5<br/><span class="label-unit">(mg/&#x2113;)</span>'), 'class'=>array('col-md-1','tech-attributes','tech-ww-attr','tech-attributes-bod5','tech-bod5','col-bod5'));
		$header[] = array('data' => t('N<br/><span class="label-unit">(mg/&#x2113;)</span>'), 'class'=>array('col-md-1','tech-attributes','tech-ww-attr','tech-attributes-totn','tech-totn','col-totn'));
		$header[] = array('data' => t('P<br/><span class="label-unit">(mg/&#x2113;)</span>'), 'class'=>array('col-md-1','tech-attributes','tech-ww-attr','tech-attributes-totp','tech-totp','col-totp'));
		$header[] = array('data' => t('TSS<br/><span class="label-unit">(mg/&#x2113;)</span>'), 'class'=>array('col-md-1','tech-attributes','tech-ww-attr','tech-attributes-totp','tech-tss','col-tss'));

    $results = $techInfo['table'];

		foreach ($results as $val) {
      $financials_factor = 1/1000000;
      $landreq_factor = 1/1000;
      $tech_id = $val['tid'];
      $tech_name = $val['name'];
      $score_value = $val['score'];
      $capex_range = $val['capex']; //."-".$capex_tot-$capex_tot*(0.2);
      $opex_range = $val['opex'];
      $capex_range_per_capita = $val['capexPC'];
      $opex_range_per_capita = $val['opexPC'];
      $landreq_display = $val['landReqt'];
      $land_cost_range = $val['landCost'];
      $land_cost_range_per_capita = $val['landCostPC'];
      $tot_inv_range = $val['totInv'];
      $tot_inv_range_per_capita = $val['totInvPC'];
      
      $ary_values['name'] = array('data'=>t('<a href="#" class="technology-name" id="technology-name-'.$tech_id.'">'.$tech_name.'</a>'),'class'=>array('tech-attributes','tech-name','col-name'), 'nowrap'=>array('nowrap'));
      $ary_values['score'] = array('data'=>number_format($score_value,2), 'class'=>array('tech-attributes','tech-score'));
      $ary_values['capex'] = array('data'=>$capex_range,'nowrap'=>'nowrap', 'class'=>array('tech-attributes','tech-financial-attr','tech-capex-pe','tech-capex'));
      $ary_values['opex'] = array('data'=>$opex_range, 'nowrap'=>'nowrap', 'class'=>array('tech-attributes','tech-financial-attr','tech-opex-pe','tech-opex'));
      $ary_values['capex_pc'] = array('data'=>$capex_range_per_capita, 'nowrap'=>'nowrap', 'class'=>array('tech-attributes','tech-financial-attr-pc','tech-capex-pc','tech-capex'));
      $ary_values['opex_pc'] = array('data'=>$opex_range_per_capita, 'nowrap'=>'nowrap', 'class'=>array('tech-attributes','tech-financial-attr-pc','tech-opex-pc','tech-opex'));
      $ary_values['landreq'] = array('data'=>$landreq_display, 'class'=>array('tech-attributes','tech-financial-attr','tech-landreq'));
      $ary_values['landcost'] = array('data'=>$land_cost_range, 'nowrap'=>'nowrap', 'class'=>array('tech-attributes','tech-financial-attr','tech-landcost-pe','tech-landcost'));
      $ary_values['landcost_pc'] = array('data'=>$land_cost_range_per_capita, 'nowrap'=>'nowrap', 'class'=>array('tech-attributes','tech-financial-attr-pc','tech-landcost-pc','tech-landcost'));
      $ary_values['tot_inv'] = array('data'=>$tot_inv_range, 'nowrap'=>'nowrap', 'class'=>array('tech-attributes','tech-financial-attr', 'tech-totinv-pe','tech-totinv'));
      $ary_values['tot_inv_pc'] = array('data'=>$tot_inv_range_per_capita, 'nowrap'=>'nowrap', 'class'=>array('tech-attributes','tech-financial-attr-pc','tech-totinv-pc','tech-totinv'));
      
      $cod_value = $val['cod'];
      $bod5_value = $val['bod5'];
      $n_value = $val['n'];
      $p_value = $val['p'];
      $tss_value = $val['tss'];

      $cod_display = (!is_null($cod_value) ? number_format($cod_value,1) : "-");
      $bod5_display = (!is_null($bod5_value) ? number_format($bod5_value,1) : "-");
      $n_display = (!is_null($n_value) ? number_format($n_value,1) : "-");
      $p_display = (!is_null($p_value) ? number_format($p_value,1) : "-");
      $tss_display = (!is_null($tss_value) ? number_format($tss_value,1) : "-");
      
      $ary_values['COD'] = array('data'=>$cod_display, 'class'=>array('tech-attributes','tech-ww-attr','tech-cod','col-cod'));
      $ary_values['BOD5'] = array('data'=>$bod5_display, 'class'=>array('tech-attributes','tech-ww-attr','tech-bod5','col-bod5'));
      $ary_values['N'] = array('data'=>$n_display, 'class'=>array('tech-attributes','tech-ww-attr','tech-totn','col-totn'));
      $ary_values['P'] = array('data'=>$p_display, 'class'=>array('tech-attributes','tech-ww-attr','tech-totp','col-totp'));
      $ary_values['TSS'] = array('data'=>$tss_display, 'class'=>array('tech-attributes','tech-ww-attr','tech-tss','col-tss'));
			$rows[] = $ary_values;
		}
    
		
		//if (empty($rows)) {
		//	$empty_message = $keys ? t('No URL aliases found.') : t('No URL aliases available.') ;
		//	$rows[] = array(array('data' => $empty_message, 'colspan' => 48));
		//}
		
		$tblAttributes = array();
		$tblAttributes['id'] = 'table-loading-tech';
		$tblAttributes['class'][] = 'panel-body';
		
		$output .= theme('table', array('header' => $header, 'rows' =>$rows, 'attributes'=>$tblAttributes));
	} else {
		$output .= 'No technologies suitable for selected standard and sources.';
		
	}
	//$output = theme_table(array('header'=>array($header), 'rows'=>array($rows)));
  //$output .= theme('pager', NULL, 50, 0);
	$output .= '</div>';
	$output .= '</div>';
    //$commands[] = ajax_command_settings($tech_values, TRUE);
    
    //ajax_deliver(array(
    //  '#type'=> 'ajax',
    //  '#commands' => array("node"=>array("values"=>array("technologies"=>array($commands))))
    //));
    //print "<pre style='display: block; height: 200px; overflow-y: scroll'>".print_r($tech_values,1)."</pre>";
    //print "<pre style='display: block; height: 200px; overflow-y: scroll'>".json_encode($tech_values,3)."</pre>";
    //drupal_add_js(array('node' => array('values' => array('technologies'=>$ary_values))),array('setting'));
		//drupal_add_js('jQuery(document).ready(function () { Drupal.settings.node.values.techologies = '.json_encode($tech_values,3).'; });', 'inline');
	/*if ($type == 'ajax'){
    $commands = array();
    $commands[] = ajax_command_replace('#loading-tech-list',"AJAX OUTPUT! ".$output.$techArgs);
    $commands[] = ajax_command_settings(array('node'=>array('ajax_test'=>'AJAX_TEST_VALUE_2'.$techArgs)), TRUE);
    $techResults = array(
      '#type' => 'ajax',
      '#commands' => $commands
    );
    ajax_deliver($techResults);
  } else {*/
    //$time = microtime(true) - $_SERVER["REQUEST_TIME_FLOAT"];
    //$output .= "wamex_display_tech: total exec time: {$time}<br/>";
  //$type = 'ajax';
  /* if ($type == 'ajax') {
    $commands[] = ajax_command_replace('#loading-tech-list',$output);
    $commands[] = ajax_command_settings(array('node'=> array('values'=>array('technologies'=>json_encode($techInfo['table'])))));
    $techResults = array(
      '#type' => 'ajax',
      '#commands' => $commands
    );
    ajax_deliver($techResults);
  } else { */
    return $output;
  //}
}

function wamex_ajax_test($type = 'ajax', $args) {
  if ($type == 'ajax') {
    if ($args == "") $output = "WALA";
    else $output = $args;
      
    $commands = array();
    $commands[] = ajax_command_replace('#loading-ajax-tech-list','<div id="HUY">'.$output.'</div>');
    $commands[] = ajax_command_settings(array('node'=>array('values'=>array('ajax_test'=>'AJAX_TEST_VALUE'))), TRUE);
    $techResults = array(
      '#type' => 'ajax',
      '#commands' => $commands
    );
    ajax_deliver($techResults);
  } else {
    return "WALA!";
  }

}


function wamex_get_selectbox_contents($vid) {
  $terms = taxonomy_get_tree($vid);
	$output = array();
  foreach ($terms as $data) {
    $output[$data->tid] = $data->name;
  }

  return $output;
}

function wamex_preprocess_page(&$variables){
	$arg = arg();
	$effluent_taxonomy = taxonomy_vocabulary_machine_name_load('effluent_standard');
	$effluent_taxonomy_tree  = taxonomy_get_tree($effluent_taxonomy->vid,0,NULL,TRUE);

	if ($arg[0] == 'dashboard' || @is_object($variables['node']) && $variables['node']->type == 'project'){
		drupal_add_js(drupal_get_path('module','wamex').'/js/formvalidation/js/formValidation.min.js',array('type'=>'file','group'=>JS_DEFAULT));
		drupal_add_js(drupal_get_path('module','wamex').'/js/formvalidation/js/framework/bootstrap.min.js',array('type'=>'file','group'=>JS_DEFAULT));
		//drupal_add_js(drupal_get_path('module','wamex').'/js/x-editable/js/bootstrap-editable.min.js',array('type'=>'file','group'=>JS_DEFAULT,'weight'));
	}

	if ($arg[0] == 'dashboard'){
		// load taxonomy tree for currency
		$variables['show_messages'] = FALSE;
		$currency_taxonomy = taxonomy_vocabulary_machine_name_load('currency');
		$currency_taxonomy_tree = taxonomy_get_tree($currency_taxonomy->vid,0);

		// get all term ids
		$currency_tids = array();
		foreach($currency_taxonomy_tree as $term) {
			$currency_tids[] = $term->tid;
		}
		// load all terms
		$currency_terms = taxonomy_term_load_multiple($currency_tids);
		drupal_add_js(array('node' => array('values' => array('field_exchange_rate_to_usd'=>0))),'setting');
		
		// add terms to Drupal.settings
		// access in JS via Drupal.settings.taxonomy.currency
		drupal_add_js(array('taxonomy' => array('currency' => $currency_terms)), 'setting');

		drupal_add_js(array('taxonomy' => array('effluentStandards' => $effluent_taxonomy_tree)),'setting');
		drupal_add_js(array('node' => array('values' => array('field_effluent_standard'=>0))),'setting');
	}
	
	if (@is_object($variables['node']) && $variables['node']->type == 'project'){
		//drupal_set_message('message','status');
		$variables['title'] = FALSE;
		$variables['tabs'] = FALSE;
		//$variables['page_title'] =

		$loading_taxonomy = taxonomy_vocabulary_machine_name_load('loading_type');
		$loading_taxonomy_tree = taxonomy_get_tree($loading_taxonomy->vid,0,NULL,TRUE);
		$loading_tids = array();
		drupal_add_js(array('taxonomy' => array('loadingTypes' => $loading_taxonomy_tree)),'setting');
		drupal_add_js(array('taxonomy' => array('effluentStandards' => $effluent_taxonomy_tree)),'setting');

	}
}

function wamex_form($variables) {
  $element = $variables ['element'];
	$output = '';
	//drupal_set_message(print_r($variables),'status');
  if (isset($element ['#action'])) {
    $element ['#attributes']['action'] = drupal_strip_dangerous_protocols($element ['#action']);
  }
  element_set_attributes($element, array('method', 'id'));
  if (empty($element ['#attributes']['accept-charset'])) {
    $element ['#attributes']['accept-charset'] = "UTF-8";
  }
  // Anonymous DIV to satisfy XHTML compliance.
  $output .= '<form' . drupal_attributes($element ['#attributes']) . '><div id="form-wrapper-div">' . $element ['#children'] . '</div></form>';
	return $output;
}

function wamex_scenario_form($form, &$form_state, $nid = null, $pid = null){
	if ($nid) {
		$node = node_load($nid);
		$title = $node->title;
		$project_nid = $node->field_project[LANGUAGE_NONE][0]['target_id'];
		$land   = $node->field_scenario_req_land[LANGUAGE_NONE][0]['value'];
		$chem   = $node->field_scenario_req_chem[LANGUAGE_NONE][0]['value'];
		$ener   = $node->field_scenario_req_energy[LANGUAGE_NONE][0]['value'];
		$om     = $node->field_scenario_om[LANGUAGE_NONE][0]['value'];
		$shock  = $node->field_scenario_shock[LANGUAGE_NONE][0]['value'];
		$flow   = $node->field_scenario_flow[LANGUAGE_NONE][0]['value'];
		$toxic  = $node->field_scenario_toxic[LANGUAGE_NONE][0]['value'];
		$sludge = $node->field_scenario_sludge[LANGUAGE_NONE][0]['value'];
	} else {
		$node = NULL;
		$title = '';
		$project_nid = $pid;
		$land   = 1;
		$chem   = 1;
		$ener   = 1;
		$om     = 1;
		$shock  = 1;
		$flow   = 1;
		$toxic  = 1;
		$sludge = 1;
	}
	
	$form = array();
	
	$form['field_project'] = array(
		'#type' => 'hidden',
		'#title' => t('Project'),
		'#default_value' => $project_nid,
		'#id' => 'field_project_nid',
	);

	$form['title'] = array(
		'#type' => 'textfield',
		'#required' => TRUE,
		'#title' => t('Name'),
		'#default_value' => $title,
		'#size' => 15,
		'#prefix' => '<div class="row"><div class="col-sm-2">',
		'#suffix' => '</div>',
	);
	$form['title']['#attributes']['class'][] = 'scenario-required';

	$form['field_scenario_req_land'] = array(
		'#type' => 'textfield',
		'#required' => FALSE,
		'#title' => t('Land'),
		'#default_value' => $land,
		'#size' => 15,
		'#prefix' => '<div class="col-sm-1 scenario-param">',
		'#suffix' => '<div class="label label-info scenario-param-value-display" id="edit-field-scenario-req-land-value-display"></div></div>',
	);
	$form['field_scenario_req_land']['#attributes']['class'][] = 'form-scenario-param';
	$form['field_scenario_req_land']['#attributes']['min'] = 1;
	$form['field_scenario_req_land']['#attributes']['max'] = 5;
	
	$form['field_scenario_req_chem'] = array(
		'#type' => 'textfield',
		'#required' => FALSE,
		'#title' => t('Chemical'),
		'#default_value' => $chem,
		'#size' => 15,
		'#prefix' => '<div class="col-sm-1 scenario-param">',
		'#suffix' => '<div class="label label-info scenario-param-value-display" id="edit-field-scenario-req-chem-value-display"></div></div>',
	);
	$form['field_scenario_req_chem']['#attributes']['class'][] = 'form-scenario-param';
	$form['field_scenario_req_chem']['#attributes']['min'] = 1;
	$form['field_scenario_req_chem']['#attributes']['max'] = 5;
	
	$form['field_scenario_req_energy'] = array(
		'#type' => 'textfield',
		'#required' => FALSE,
		'#title' => t('Energy'),
		'#default_value' => $ener,
		'#size' => 15,
		'#prefix' => '<div class="col-sm-1 scenario-param">',
		'#suffix' => '<div class="label label-info scenario-param-value-display" id="edit-field-scenario-req-energy-value-display"></div></div>',
	);
	$form['field_scenario_req_energy']['#attributes']['class'][] = 'form-scenario-param';
	$form['field_scenario_req_energy']['#attributes']['min'] = 1;
	$form['field_scenario_req_energy']['#attributes']['max'] = 5;
	
	$form['field_scenario_om'] = array(
		'#type' => 'textfield',
		'#required' => FALSE,
		'#title' => t('O&M'),
		'#default_value' => $om,
		'#size' => 15,
		'#prefix' => '<div class="col-sm-1 scenario-param">',
		'#suffix' => '<div class="label label-info scenario-param-value-display" id="edit-field-scenario-om-value-display"></div></div>',
	);
	$form['field_scenario_om']['#attributes']['class'][] = 'form-scenario-param';
	$form['field_scenario_om']['#attributes']['min'] = 1;
	$form['field_scenario_om']['#attributes']['max'] = 5;
	
	$form['field_scenario_shock'] = array(
		'#type' => 'textfield',
		'#required' => FALSE,
		'#title' => t('Shock'),
		'#default_value' => $shock,
		'#size' => 15,
		'#prefix' => '<div class="col-sm-1 scenario-param">',
		'#suffix' => '<div class="label label-info scenario-param-value-display" id="edit-field-scenario-shock-value-display"></div></div>',
	);
	$form['field_scenario_shock']['#attributes']['class'][] = 'form-scenario-param';
	$form['field_scenario_shock']['#attributes']['min'] = 1;
	$form['field_scenario_shock']['#attributes']['max'] = 5;
	
	$form['field_scenario_flow'] = array(
		'#type' => 'textfield',
		'#required' => FALSE,
		'#title' => t('Flow'),
		'#default_value' => $flow,
		'#size' => 15,
		'#prefix' => '<div class="col-sm-1 scenario-param">',
		'#suffix' => '<div class="label label-info scenario-param-value-display" id="edit-field-scenario-flow-value-display"></div></div>',
	);
	$form['field_scenario_flow']['#attributes']['class'][] = 'form-scenario-param';
	$form['field_scenario_flow']['#attributes']['min'] = 1;
	$form['field_scenario_flow']['#attributes']['max'] = 5;
	
	$form['field_scenario_toxic'] = array(
		'#type' => 'textfield',
		'#required' => FALSE,
		'#title' => t('Toxic'),
		'#default_value' => $toxic,
		'#size' => 15,
		'#prefix' => '<div class="col-sm-1 scenario-param">',
		'#suffix' => '<div class="label label-info scenario-param-value-display" id="edit-field-scenario-toxic-value-display"></div></div>',
	);
	$form['field_scenario_toxic']['#attributes']['class'][] = 'form-scenario-param';
	$form['field_scenario_toxic']['#attributes']['min'] = 1;
	$form['field_scenario_toxic']['#attributes']['max'] = 5;

	$form['field_scenario_sludge'] = array(
		'#type' => 'textfield',
		'#required' => FALSE,
		'#title' => t('Sludge'),
		'#default_value' => $sludge,
		'#size' => 15,
		'#prefix' => '<div class="col-sm-1 scenario-param">',
		'#suffix' => '<div class="label label-info scenario-param-value-display" id="edit-field-scenario-sludge-value-display"></div></div>',
	);
	$form['field_scenario_sludge']['#attributes']['class'][] = 'form-scenario-param';
	$form['field_scenario_sludge']['#attributes']['min'] = 1;
	$form['field_scenario_sludge']['#attributes']['max'] = 5;
	
	$form['actions']['#prefix'] = "<div class='col-sm-2'>";
	$form['actions']['#suffix'] = "</div>";
	$form['actions']['submit']['#type'] = 'submit';
	$form['actions']['submit']['#ajax']['type'] = 'throbber';
	$form['actions']['submit']['#ajax']['callback'] = 'wamex_scenario_form_submit';
	$form['actions']['submit']['#attributes']['id'] = 'edit-scenario-submit';
	$form['actions']['submit']['#attributes']['class'][] = 'btn-xs';
	$form['actions']['submit']['#value'] = t('<span class="glyphicon glyphicon-floppy-save no-print"></span>&nbsp;Save');
	$form['actions']['cancel']['#type'] = 'button';
	$form['actions']['cancel']['#value'] = t('<span class="glyphicon glyphicon-remove"></span>&nbsp;Cancel');
	$form['actions']['cancel']['#attributes']['id'] = 'edit-scenario-cancel';
	$form['actions']['cancel']['#attributes']['class'][] = 'btn';
	$form['actions']['cancel']['#attributes']['class'][] = 'btn-default';
	$form['actions']['cancel']['#attributes']['class'][] = 'btn-xs';

	if ($nid){
		// edit existing
		$form['nid']['#type'] = 'hidden';
		$form['nid']['#value'] = $nid;
		//$form['actions']['submit']['#attributes']['id'] = 'edit-submit-'.$nid;
	} else {
		// add new
		//$form['actions']['submit']['#value'] = t('<span class="glyphicon glyphicon-floppy-save"></span>&nbsp;Save');
		//$form['actions']['submit']['#attributes']['id'] = 'edit-submit';
	}

	return $form;
}

function wamex_scenario_form_render($form, $nid, $pid) {
	$output = "";
	//$output .= "<h2>NID: ".$nid."</h2>";
	//$output .= "<h2>PID: ".$pid."</h2>";
	
	if ($nid){
		$project_nid = $node->field_project[LANGUAGE_NONE][0]['target_id'];
	} else {
		$project_nid = $pid;
	}

	$scenario_form = drupal_get_form($form,$nid,$pid);

	$header = array();
	$rows = array();
	
	/*$header = array(
		array('data'=>$loading_form['title']['#title'],'class'=>array('col-sm-2')),
		array('data'=>$loading_form['field_loading_type']['#title'],'class'=>array('col-sm-2','col-type')),
		//array('data'=>'&nbsp','class'=>array()),
		//array('data'=>'&nbsp','class'=>array()),
	);*/
	
	$scenario_form['title']['#title'] = null;
	$scenario_form['field_scenario_req_land']['#title'] = null;
	$scenario_form['field_scenario_req_chem']['#title'] = null;
	$scenario_form['field_scenario_req_energy']['#title'] = null;
	$scenario_form['field_scenario_om']['#title'] = null;
	$scenario_form['field_scenario_shock']['#title'] = null;
	$scenario_form['field_scenario_flow']['#title'] = null;
	$scenario_form['field_scenario_toxic']['#title'] = null;
	$scenario_form['field_scenario_sludge']['#title'] = null;
	//$scenario_form['field_project']['#default_value'] = $project_nid;

	$rows[] = array(array('data'=>t('<label>Name</label>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['title']));
	$rows[] = array(array('data'=>t('<label>Land</label><span class="scenario-param-value-display" id="edit-field-scenario-req-land-value-display"></span>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['field_scenario_req_land']));
	$rows[] = array(array('data'=>t('<label>Chemical</label><span class="scenario-param-value-display" id="edit-field-scenario-req-chem-value-display"></span>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['field_scenario_req_chem']));
	$rows[] = array(array('data'=>t('<label>Energy</label><span class="scenario-param-value-display" id="edit-field-scenario-req-energy-value-display"></span>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['field_scenario_req_energy']));
	$rows[] = array(array('data'=>t('<label>O&M</label><span class="scenario-param-value-display" id="edit-field-scenario-om-value-display"></span>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['field_scenario_om']));
	$rows[] = array(array('data'=>t('<label>Shock</label><span class="scenario-param-value-display" id="edit-field-scenario-shock-value-display"></span>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['field_scenario_shock']));
	$rows[] = array(array('data'=>t('<label>Flow</label><span class="scenario-param-value-display" id="edit-field-scenario-flow-value-display"></span>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['field_scenario_flow']));
	$rows[] = array(array('data'=>t('<label>Toxic</label><span class="scenario-param-value-display" id="edit-field-scenario-toxic-value-display"></span>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['field_scenario_toxic']));
	$rows[] = array(array('data'=>t('<label>Sludge</label><span class="scenario-param-value-display" id="edit-field-scenario-sludge-value-display"></span>'),'class'=>array('form-scenario-label')),array('data'=>$scenario_form['field_scenario_sludge']));
	$rows[] = array(
		array('data'=>$scenario_form['actions']['submit']),
		array('data'=>$scenario_form['actions']['cancel']),
	);
	
	$output .= theme(
		'table',
		array('header'=>$header, 'rows'=>$rows,'attributes'=>array('id'=>'table-scenario-form'))
	);
	
	$output .= drupal_render($scenario_form['field_project']);
	$output .= drupal_render($scenario_form['nid']);
	$output .= drupal_render($scenario_form['form_build_id']);
	$output .= drupal_render($scenario_form['form_id']);
	$output .= drupal_render($scenario_form['form_token']);
	$variables['element'] = $scenario_form;
	$variables['element']['#children'] = $output;
	
	return theme_form($variables);
}


function wamex_scenario_form_submit($form, &$form_state){
	ctools_include('ajax');
	ctools_add_js('ajax-responder');
	$errors = form_get_errors();
	$commands = array();
	drupal_get_messages();

	if(!empty($errors)) { 
		$selector = '#project-messages';
		$error_variables = array(
			'items'=> $errors,
			'title'=> 'Add New Scenario Errors',
			'type'=> 'ul',
		);
		drupal_set_message(theme_item_list($errors),'error');
		drupal_set_message('this','error');
		//$form_state['redirect'] = 'dashboard';
    $commands[] = ajax_command_html($selector, '<div class = "error-msgs">' .theme('status_messages'). '</div>');
		return array('#type' => 'ajax', '#commands' => $commands);
	}
	else {
	
		if (empty($form_state['values']['nid'])){
			// add new node
			global $user;
			$newnode = new stdClass();
			$newnode->title = $form_state['input']['title'];
			$newnode->language = LANGUAGE_NONE;
			$newnode->type = 'scenario';
			$newnode->uid = $user->uid;
			$newnode->field_project[LANGUAGE_NONE][0]['target_id'] = $form_state['input']['field_project'];
			$newnode->field_scenario_req_land[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_req_land'];
			$newnode->field_scenario_req_chem[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_req_chem'];
			$newnode->field_scenario_req_energy[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_req_energy'];
			$newnode->field_scenario_om[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_om'];
			$newnode->field_scenario_shock[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_shock'];
			$newnode->field_scenario_flow[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_flow'];
			$newnode->field_scenario_toxic[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_toxic'];
			$newnode->field_scenario_sludge[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_sludge'];
			try {
				node_save($newnode);
				$success = TRUE;
				drupal_set_message(t('Scenario <b>'.$newnode->title.'</b> created.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t('New Scenario not saved.<br/>'.$e->getMessage()),'error');
			}
		} 
		else {
			// update existing node
			$node = node_load($form_state['values']['nid']);
			$node->title = $form_state['input']['title'];
			$node->language = LANGUAGE_NONE;
			$node->field_project[LANGUAGE_NONE][0]['target_id'] = $form_state['input']['field_project'];
			$node->field_scenario_req_land[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_req_land'];
			$node->field_scenario_req_chem[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_req_chem'];
			$node->field_scenario_req_energy[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_req_energy'];
			$node->field_scenario_om[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_om'];
			$node->field_scenario_shock[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_shock'];
			$node->field_scenario_flow[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_flow'];
			$node->field_scenario_toxic[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_toxic'];
			$node->field_scenario_sludge[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_scenario_sludge'];
			$node = node_submit($node);
			try {
				node_save($node);
				$success = TRUE;
				drupal_set_message(t('Scenario <b>'.$node->title.'</b> updated.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t($e->getMessage().'<br/>Scenario not updated.'),'error');
			}
		}

		if ($success){
			$form_state['redirect'] = array('node/'.$form_state['input']['field_project'], array('fragment'=>'scenario-list'));
			//$redir_url = l('asdf',$form_state['redirect'],array('fragment'=>'scenario-list'));
			//drupal_set_message($redir_url);
			$commands[] = ctools_ajax_command_reload();
			return array('#type' => 'ajax', '#commands' => $commands);
		} 
		
	}
	//$node->field_scenario_attributes[LANGUAGE_NONE][0]['field_scenario_'][LANGUAGE_NONE] = $form_state['input']['field_scenario_'];
}


function wamex_scenario_submit_handler($form, &$form_state) {
  if ($form_state['node']->nid) {
  
    
    //popup_element(t(''), t("Your project has been submitted"));
	
	//drupal_set_message(t('1'.$form_state['redirect']));

	$form_state['redirect'] = array('node/'.$form_state['input']['field_project'], array('fragment'=>'scenario-list'));
	//$form_state['redirect'] = 'node/'.$form_state['node']->field_project[LANGUAGE_NONE][0]['target_id'];
	//drupal_set_message(t('2.'.print_r($form_state['redirect'])));
	
					$path =  array(
						t('thank-you'),
						array(
							'query' => array(
							'destination' => t('node'),
							),
						),
					);
	
	//$form_state['redirect'] = $path;
  }
}


function wamex_scenario_delete_confirm($form, &$form_state, $nid){
	$node = node_load($nid);
	$scenario_name = $node->title;
	$project_nid = $node->field_project[LANGUAGE_NONE][0]['target_id'];
  if (user_access('delete scenario custom')) {
		$form['nid'] = array('#type' => 'hidden', '#value' => $nid);
    $output = confirm_form($form,
      t('Are you sure you want to delete %title?', array('%title' => $scenario_name)),
      isset($_GET['destination']) ? $_GET['destination'] : 'node/'.$project_nid,
			t('Are you sure you want to delete scenario %title? This action cannot be undone.', array('%title' => $scenario_name)),
			t('Yes'),
			t('No'));
  }
  return $output;
}

function wamex_scenario_delete_confirm_submit($form, &$form_state){
  if ($form_state['values']['confirm']) {
		try{
			node_delete($form_state['values']['nid']);
			$success = TRUE;
			drupal_set_message(t('The scenario has been deleted.'));
		}
		catch (Exception $e){
			$success = FALSE;
			drupal_set_message(t('Could not delete the scenario.'),'error');
		}
	
    $form_state['redirect'] = array($form['actions']['cancel']['#href'],array('fragment'=>'scenario-list'));
    return;
  }

}



// renders loading form as table
function wamex_loading_form_render($form, $nid, $pid){
	$output = "";
	//$output .= "<h2>NID: ".$nid."</h2>";
	//$output .= "<h2>PID: ".$pid."</h2>";
	if ($nid){
		$node = node_load($nid);
		$project_nid = $node->field_project[LANGUAGE_NONE][0]['target_id'];
	} else {
		$project_nid = $pid;
	}

	$loading_form = drupal_get_form($form,$nid,$pid);

	$header = array();
	$rows = array();
	
	$header = array(
		array('data'=>$loading_form['title']['#title'],'class'=>array('col-sm-2')),
		array('data'=>$loading_form['field_loading_type']['#title'],'class'=>array('col-sm-2','col-type')),
		array('data'=>$loading_form['field_loading_adwf']['#title'],'class'=>array('col-adwf')),
		array('data'=>$loading_form['field_loading_cod']['#title'],'class'=>array('col-cod')),
		array('data'=>$loading_form['field_loading_bod5']['#title'],'class'=>array('col-bod5')),
		array('data'=>$loading_form['field_loading_totn']['#title'],'class'=>array('col-totn')),
		array('data'=>$loading_form['field_loading_totp']['#title'],'class'=>array('col-totp')),
		array('data'=>$loading_form['field_loading_tss']['#title'],'class'=>array('col-tss')),
		array('data'=>$loading_form['field_loading_weight']['#title'],'class'=>array()),
		array('data'=>'&nbsp','class'=>array()),
		array('data'=>'&nbsp','class'=>array()),
	);
	
	$loading_form['title']['#title'] = null;
	$loading_form['field_loading_type']['#title'] = null;
	$loading_form['field_loading_adwf']['#title'] = null;
	$loading_form['field_loading_cod']['#title'] = null;
	$loading_form['field_loading_bod5']['#title'] = null;
	$loading_form['field_loading_totn']['#title'] = null;
	$loading_form['field_loading_totp']['#title'] = null;
	$loading_form['field_loading_tss']['#title'] = null;
	$loading_form['field_loading_weight']['#title'] = null;
	$loading_form['field_project_und']['#default_value'] = $project_nid;

	$rows[0] = array(
		array('data'=>$loading_form['title']),
		array('data'=>$loading_form['field_loading_type'],'class'=>array('col-type')),
		array('data'=>$loading_form['field_loading_adwf'],'class'=>array('col-adwf')),
		array('data'=>$loading_form['field_loading_cod'],'class'=>array('col-cod')),
		array('data'=>$loading_form['field_loading_bod5'],'class'=>array('col-bod5')),
		array('data'=>$loading_form['field_loading_totn'],'class'=>array('col-totn')),
		array('data'=>$loading_form['field_loading_totp'],'class'=>array('col-totp')),
		array('data'=>$loading_form['field_loading_tss'],'class'=>array('col-tss')),
		array('data'=>$loading_form['field_loading_weight'],'class'=>array()),
		array('data'=>$loading_form['field_project_und'],'class'=>array('hidden')),
		array('data'=>$loading_form['nid'],'class'=>array('hidden')),
		array('data'=>$loading_form['actions']['submit']),
		array('data'=>$loading_form['actions']['cancel']),
	);
	
	$output .= theme(
		'table',
		array('header'=>$header, 'rows'=>$rows)
	);
	
	$output .= drupal_render($loading_form['form_build_id']);
	$output .= drupal_render($loading_form['form_id']);
	$output .= drupal_render($loading_form['form_token']);
	$variables['element'] = $loading_form;
	$variables['element']['#children'] = $output;
	
	return theme_form($variables);
}

function wamex_loading_form($form, &$form_state, $nid = null, $pid = null){
	if ($nid){
		$node = node_load($nid);
		//drupal_set_message('<pre>'.print_r($node).'</pre>','status');
		$title = $node->title;
		$body = $node->body;
		$project_nid = $node->field_project[LANGUAGE_NONE][0]['target_id'];
		$type   = $node->field_loading_type[LANGUAGE_NONE][0]['tid'];
		$adwf   = $node->field_loading_adwf[LANGUAGE_NONE][0]['value'];
		$cod    = $node->field_loading_cod[LANGUAGE_NONE][0]['value'];
		$bod5   = $node->field_loading_bod5[LANGUAGE_NONE][0]['value'];
		$totn   = $node->field_loading_totn[LANGUAGE_NONE][0]['value'];
		$totp   = $node->field_loading_totp[LANGUAGE_NONE][0]['value'];
		$tss    = $node->field_loading_tss[LANGUAGE_NONE][0]['value'];
		$weight = $node->field_loading_weight[LANGUAGE_NONE][0]['value'];
		$cancel_btn_id = 'edit-loading-cancel-'.$nid;
	} else {
		$node = NULL;
		$title = '';
		$body = '';
		$project_nid = $pid;
		$type = '_none';
		$adwf = 0;
		$cod = 0;
		$bod5 = 0;
		$totn = 0;
		$totp = 0;
		$tss = 0;
		$weight = 0;
		$cancel_btn_id = 'add-loading-cancel';
	}
	
	$form = array();
	//$form['#theme'] = 'table';
	//$form['#attributes']['class'][] = 'row';
	//$form['#attributes']['class'][] = 'form-container';
	//$form['#attributes']['class'][] = 'container-fluid';
	
	
	$form['title'] = array(
		'#type' => 'textfield',
		'#required' => TRUE,
		'#title' => t('Name'),
		'#default_value' => $title,
		'#size' => 15,
		//'#prefix' => '<div class="col-sm-1">',
		//'#suffix' => '</div>',
		//'#attributes' =>array('placeholder' => t('*Required')),
		//'#field_prefix' => 'field_prefix|',
		//'#prefix' => '<div>',
	);
	$form['title']['#attributes']['class'][] = 'loading-required';
	
	$form['field_project_und'] = array(
		'#type' => 'hidden',
		'#title' => t('Project'),
		'#default_value' => $project_nid,
		'#id' => 'field_project_nid',

	);
	
	$loading_type_vocab = taxonomy_vocabulary_machine_name_load('loading_type');
	$loading_type_terms  = wamex_get_selectbox_contents($loading_type_vocab->vid);
	$loading_type_opts = $loading_type_terms;
	//array(''=>t('*Required'))+
	
	$form['field_loading_type'] = array(
		'#type' => 'select',
		'#title' => t('Type'),
		//'#required' => TRUE,
		//'#empty_option' => t('- Select -'),
		//'#empty_value' => 0,
		'#options' => $loading_type_opts,
		'#default_value' => $type,
		//'#prefix' => '<div class="col-sm-2">',
		//'#suffix' => '</div>',
	);
	$form['field_loading_type']['#attributes']['class'][] = 'loading-required';
	
	$form['field_loading_adwf'] = array(
		'#type' => 'textfield',
		'#title' => t('<span class="label-name">ADWF</span><br/><span class="label-unit">(&#x2113;/p/d)</span>'),
		'#default_value' => $adwf,
		//'#prefix' => '<div class="col-sm-1">',
		//'#suffix' => '</div>',
	);
	$form['field_loading_adwf']['#attributes']['class'][] = 'form-loading-attribute';
	
	$form['field_loading_cod'] = array(
		'#type' => 'textfield',
		'#title' => t('<span class="label-name">COD</span><br/><span class="label-unit">(mg/&#x2113;)</span>'),
		'#default_value' => $cod,
		//'#prefix' => '<div class="col-sm-1">',
		//'#suffix' => '</div>',
	);
	$form['field_loading_cod']['#attributes']['class'][] = 'form-loading-attribute';
	
	$form['field_loading_bod5'] = array(
		'#type' => 'textfield',
		'#title' => t('<span class="label-name">BOD5</span><br/><span class="label-unit">(mg/&#x2113;)</span>'),
		'#default_value' => $bod5,
		//'#prefix' => '<div class="col-sm-1">',
		//'#suffix' => '</div>',
	);
	$form['field_loading_bod5']['#attributes']['class'][] = 'form-loading-attribute';
	
	$form['field_loading_totn'] = array(
		'#type' => 'textfield',
		'#title' => t('<span class="label-name">TotN</span><br/><span class="label-unit">(mg/&#x2113;)</span>'),
		'#default_value' => $totn,
		//'#prefix' => '<div class="col-sm-1">',
		//'#suffix' => '</div>',
	);
	$form['field_loading_totn']['#attributes']['class'][] = 'form-loading-attribute';
	
	$form['field_loading_totp'] = array(
		'#type' => 'textfield',
		'#title' => t('<span class="label-name">TotP</span><br/><span class="label-unit">(mg/&#x2113;)</span>'),
		'#default_value' => $totp,
		//'#prefix' => '<div class="col-sm-1">',
		//'#suffix' => '</div>',
	);
	$form['field_loading_totp']['#attributes']['class'][] = 'form-loading-attribute';
	
	$form['field_loading_tss'] = array(
		'#type' => 'textfield',
		'#title' => t('<span class="label-name">TSS</span><br/><span class="label-unit">(mg/&#x2113;)</span>'),
		'#default_value' => $tss,
		//'#prefix' => '<div class="col-sm-1">',
		//'#suffix' => '</div>',
	);
	$form['field_loading_tss']['#attributes']['class'][] = 'form-loading-attribute';
	
	$form['field_loading_weight'] = array(
		'#type' => 'textfield',
		'#title' => t('%'),
		'#required' => TRUE,
		'#default_value' => $weight,
		//'#prefix' => '<div class="col-sm-1">',
		//'#suffix' => '</div>',
	);
	$form['field_loading_weight']['#attributes']['class'][] = 'form-loading-attribute';
	$form['field_loading_weight']['#attributes']['min'][] = 0;
	$form['field_loading_weight']['#attributes']['max'][] = 100;
	
	//$form['actions']['submit']['#prefix'] = '<div class="col-sm-2" id="loading-actions-container">'; //'<div id="loading-save-container">';
	//$form['actions']['submit']['#suffix'] = '</div>';
	$form['actions']['submit']['#type'] = 'submit';
	$form['actions']['submit']['#ajax']['type'] = 'throbber';
	$form['actions']['submit']['#ajax']['callback'] = 'wamex_loading_form_submit';
	$form['actions']['submit']['#attributes']['id'] = 'edit-loading-submit';
	$form['actions']['submit']['#attributes']['class'][] = 'btn-xs';
	$form['actions']['submit']['#value'] = t('<span class="glyphicon glyphicon-floppy-save"></span>&nbsp;Save');
	//$form['actions']['cancel']['#prefix'] = '<div id="loading-cancel-container">';
	//$form['actions']['cancel']['#suffix'] = '</div></div>';
	$form['actions']['cancel']['#type'] = 'button';
	$form['actions']['cancel']['#value'] = t('<span class="glyphicon glyphicon-remove"></span>&nbsp;Cancel');
	$form['actions']['cancel']['#attributes']['id'] = 'edit-loading-cancel';
	$form['actions']['cancel']['#attributes']['class'][] = 'btn';
	$form['actions']['cancel']['#attributes']['class'][] = 'btn-default';
	$form['actions']['cancel']['#attributes']['class'][] = 'btn-xs';
	$form['nid']['#type'] = 'hidden';

	if ($nid){
		// edit existing
		$form['nid']['#value'] = $nid;
		//$form['actions']['submit']['#attributes']['id'] = 'edit-submit-'.$nid;
	} else {
		// add new
		$form['nid']['#value'] = NULL;
		//$form['actions']['submit']['#value'] = t('<span class="glyphicon glyphicon-floppy-save"></span>&nbsp;Save');
		//$form['actions']['submit']['#attributes']['id'] = 'edit-submit';
	}
	
	return $form;

}

function wamex_loading_form_submit($form, &$form_state){
	ctools_include('ajax');
	ctools_add_js('ajax-responder');
	$errors = form_get_errors();
	$commands = array();
	drupal_get_messages();

	if(!empty($errors)) { 
		$selector = '#project-messages';
		$error_variables = array(
			'items'=> $errors,
			'title'=> 'Add New Loading Errors',
			'type'=> 'ul',
		);
		drupal_set_message(theme_item_list($errors),'error');
		drupal_set_message('this','error');
		//$form_state['redirect'] = 'dashboard';
    $commands[] = ajax_command_html($selector, '<div class = "error-msgs">' .theme('status_messages'). '</div>');
		return array('#type' => 'ajax', '#commands' => $commands);
	}
	else {
	
		if (empty($form_state['values']['nid'])){
			// add new node
			global $user;
			$newnode = new stdClass();
			$newnode->title = $form_state['input']['title'];
			$newnode->language = LANGUAGE_NONE;
			$newnode->uid = $user->uid;
			$newnode->type = 'loading';
			$newnode->field_project[LANGUAGE_NONE][0]['target_id'] = $form_state['input']['field_project_und'];
			$newnode->field_loading_type[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_loading_type'];
			$newnode->field_loading_adwf[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_adwf'];
			$newnode->field_loading_cod[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_cod'];
			$newnode->field_loading_bod5[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_bod5'];
			$newnode->field_loading_totn[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_totn'];
			$newnode->field_loading_totp[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_totp'];
			$newnode->field_loading_tss[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_tss'];
			$newnode->field_loading_weight[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_weight'];
			try {
				node_save($newnode);
				$success = TRUE;
				drupal_set_message(t('Loading <b>'.$newnode->title.'</b> created.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t('New Loading not saved.<br/>'.$e->getMessage()),'error');
			}
		} 
		else {
			// update existing node
			$node = node_load($form_state['values']['nid']);
			$node->title = $form_state['input']['title'];
			$node->language = LANGUAGE_NONE;
			$node->field_project[LANGUAGE_NONE][0]['target_id'] = $form_state['input']['field_project_und'];
			$node->field_loading_type[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_loading_type'];
			$node->field_loading_adwf[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_adwf'];
			$node->field_loading_cod[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_cod'];
			$node->field_loading_bod5[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_bod5'];
			$node->field_loading_totn[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_totn'];
			$node->field_loading_totp[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_totp'];
			$node->field_loading_tss[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_tss'];
			$node->field_loading_weight[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_loading_weight'];
			$node = node_submit($node);
			try {
				node_save($node);
				$success = TRUE;
				drupal_set_message(t('Loading <b>'.$node->title.'</b> updated.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t($e->getMessage().'<br/>Loading not updated.'),'error');
			}
		}

		if ($success){
			$form_state['redirect'] = array('node/'.$form_state['input']['field_project_und'], array('fragment'=>'loading-list'));
			//$redir_url = l('asdf',$form_state['redirect'],array('fragment'=>'loading-list'));
			//drupal_set_message($redir_url);
			$commands[] = ctools_ajax_command_reload();
			return array('#type' => 'ajax', '#commands' => $commands);
		} 
		
	}
	//$node->field_loading_attributes[LANGUAGE_NONE][0]['field_loading_'][LANGUAGE_NONE] = $form_state['input']['field_loading_'];
}

function wamex_loading_submit_handler($form, &$form_state) {
  if ($form_state['node']->nid) {
  
    
    //popup_element(t(''), t("Your project has been submitted"));
	
	//drupal_set_message(t('1'.$form_state['redirect']));

	$form_state['redirect'] = array('node/'.$form_state['input']['field_project_und'], array('fragment'=>'loading-list'));
	//$form_state['redirect'] = 'node/'.$form_state['node']->field_project[LANGUAGE_NONE][0]['target_id'];
	//drupal_set_message(t('2.'.print_r($form_state['redirect'])));
	
					$path =  array(
						t('thank-you'),
						array(
							'query' => array(
							'destination' => t('node'),
							),
						),
					);
	
	//$form_state['redirect'] = $path;
  }
}

function wamex_loading_delete_confirm($form, &$form_state, $nid){
	$node = node_load($nid);
	$loading_name = $node->title;
	$project_nid = $node->field_project[LANGUAGE_NONE][0]['target_id'];
  if (user_access('delete loading custom')) {
		$form['nid'] = array('#type' => 'hidden', '#value' => $nid);
    $output = confirm_form($form,
      t('Are you sure you want to delete %title?', array('%title' => $loading_name)),
      isset($_GET['destination']) ? $_GET['destination'] : 'node/'.$project_nid,
			t('Are you sure you want to delete loading %title? This action cannot be undone.', array('%title' => $loading_name)),
			t('Yes'),
			t('No'));
  }
  return $output;
}

function wamex_loading_delete_confirm_submit($form, &$form_state){
  if ($form_state['values']['confirm']) {
		try{
			node_delete($form_state['values']['nid']);
			$success = TRUE;
			drupal_set_message(t('The loading has been deleted.'));
		}
		catch (Exception $e){
			$success = FALSE;
			drupal_set_message(t('Could not delete the loading.'),'error');
		}
	
    $form_state['redirect'] = array($form['actions']['cancel']['#href'],array('fragment'=>'loading-list'));
    return;
  }

}


function wamex_project_form($form, &$form_state, $nid = null) {
	if ($nid) {
		$node = node_load($nid);
		//node_object_prepare($node);
		$title = $node->title;
		$body = $node->body['und'][0]['value'];
		$field_location = $node->field_location['und'][0]['value'];
		$field_population = $node->field_population['und'][0]['value'];
		$field_author = $node->field_author['und'][0]['value'];
		$field_discount_rate = $node->field_discount_rate['und'][0]['value'];
		//$field_om_pct_treatment = (isset($node->field_om_pct_treatment['und']) ? $node->field_om_pct_treatment['und'][0]['value'] : 0);
		//$field_design_horizon_treatment = (isset($node->field_design_horizon_treatment['und']) ? $node->field_design_horizon_treatment['und'][0]['value'] : 0);
		//$field_ci_cost = $node->field_ci_cost['und'][0]['value'];
		$field_land_cost = (isset($node->field_land_cost['und']) ? $node->field_land_cost['und'][0]['value'] : 0);
		$field_currency = $node->field_currency['und'][0]['tid'];
		$field_exchange_rate_to_usd = $node->field_exchange_rate_to_usd['und'][0]['value'];
		$field_effluent_standard = $node->field_effluent_standard['und'][0]['tid'];
		$field_cod = $node->field_loading_cod['und'][0]['value'];
		$field_bod5 = $node->field_loading_bod5['und'][0]['value'];
		$field_totn = $node->field_loading_totn['und'][0]['value'];
		$field_totp = $node->field_loading_totp['und'][0]['value'];
		$field_tss = $node->field_loading_tss['und'][0]['value'];
		$field_land_cost = $node->field_land_cost['und'][0]['value'];
		$field_land_area = (isset($node->field_land_area['und']) ? $node->field_land_area['und'][0]['value'] : 0);
		$field_population_density = (isset($node->field_population_density['und']) ? $node->field_population_density['und'][0]['value'] : 0);
		if(arg(0) == 'project'){
			drupal_add_js(drupal_get_path('module','wamex').'/js/formvalidation/js/formValidation.min.js',array('type'=>'file','group'=>JS_DEFAULT));
			drupal_add_css(drupal_get_path('module','wamex').'/js/formvalidation/css/formValidation.min.css',array('type'=>'file','group'=>CSS_THEME));
			drupal_add_js(drupal_get_path('module','wamex').'/js/formvalidation/js/framework/bootstrap.min.js',array('type'=>'file','group'=>JS_DEFAULT));
			drupal_add_js(drupal_get_path('module','wamex').'/js/wamex.js');
			drupal_add_js(array('node' => array('values' => array('nid'=>$nid))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_currency'=>$field_currency))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_exchange_rate'=>$field_exchange_rate_to_usd))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_effluent_standard'=>$field_effluent_standard))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_discount_rate'=>$field_discount_rate))),'setting');
			//drupal_add_js(array('node' => array('values' => array('field_om_pct_treatment'=>$field_om_pct_treatment))),'setting');
			//drupal_add_js(array('node' => array('values' => array('field_design_horizon_treatment'=>$field_design_horizon_treatment))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_cod'=>$field_cod))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_bod5'=>$field_bod5))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_totn'=>$field_totn))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_totp'=>$field_totp))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_tss'=>$field_tss))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_land_cost'=>$field_land_cost))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_land_area'=>$field_land_area))),'setting');
			drupal_add_js(array('node' => array('values' => array('field_population_density'=>$field_population_density))),'setting');
		}
	} else {
		$node = NULL;
		$title = '';
		$body = '';
		$field_location = '';
		$field_population = 0;
		$field_author = '';
		$field_discount_rate = 0;
		//$field_om_pct_treatment = 0;
		$field_design_horizon_treatment = 0;
		//$field_ci_cost = 0;
		$field_land_cost = 0;
		$field_currency = 2;	// default to tid of US Dollar
		$field_exchange_rate_to_usd = 1.0;
		$field_effluent_standard = '';
		$field_cod = 0;
		$field_bod5 = 0;
		$field_totn = 0;
		$field_totp = 0;
		$field_tss = 0;
    $field_land_area = 0;
    $field_population_density = 0;
	}

	$form = array();
	//$form['#node'] = $node;
	$form['#attributes']['class'][] = 'form-container';
	$form['#attributes']['class'][] = 'container-fluid';
	$form['#attributes']['name'] = 'wamex-project-form';
	//$form['#prefix'] = '<div id="project-forms-container" class="container-fluid">';
	//$form['#suffix'] = '</div>';
	
	//$form['#attributes']['data-toggle'] = 'validator';
	//$form['#attributes']['role'] = 'form';
	$form['title'] = array(
		'#type' => 'textfield',
		'#required' => TRUE,
		'#title' => t('Project Name'),
		'#default_value' => $title,
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['field_location'] = array(
		'#type' => 'textfield',
		'#title' => t('Location'),
		'#default_value' => $field_location,
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['field_population_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Population'),
		'#default_value' => $field_population,
		'#prefix' => '<div class="row"><div class="col-md-7 col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['body'] = array(
		'#type' => 'textarea',
		'#title' => t('Description'),
		'#default_value' => $body,
		'#prefix' => '<div class="row"><div class="col-sm-12">',
		'#suffix' => '</div></div>',
	);
	$form['field_author'] = array(
		'#type' => 'textfield',
		'#title' => t('Author'),
		'#default_value' => $field_author,
		'#prefix' => '<div class="row"><div class="col-md-7 col-sm-12">',
		'#suffix' => '</div></div>',
	);

	// load taxonomy tree for currency
	$currency_vocab = taxonomy_vocabulary_machine_name_load('currency');
	$currency_terms  = wamex_get_selectbox_contents($currency_vocab->vid);
	$currency_opts = $currency_terms;
	$currency_taxonomy_tree = taxonomy_get_tree($currency_vocab->vid,0);
	// get all term ids
	$currency_tids = array();
	foreach($currency_taxonomy_tree as $term) {
		$currency_tids[] = $term->tid;
	}
	// load all terms
	$currency_terms2 = taxonomy_term_load_multiple($currency_tids);
	
	// add terms to Drupal.settings
	// access in JS via Drupal.settings.taxonomy.currency
	drupal_add_js(array('taxonomy' => array('currency' => $currency_terms2)), 'setting');

	$form['field_currency_und'] = array(
		'#title' => t('Currency'),
		'#type' => 'select',
		'#default_value' => $field_currency,
		'#options' => $currency_opts,
		'#prefix' => '<hr/><div class="row"><div class="col-sm-12 col-md-6 col-lg-6">',
		'#suffix' => '</div>',
	);
	$form['field_exchange_rate_to_usd_und_0_value'] = array(
		'#title' => t('Exchange Rate to USD'),
		'#type' => 'textfield',
		'#default_value' => $field_exchange_rate_to_usd,
		'#prefix' => '<div class="col-sm-12 col-md-6 col-lg-6 hidden" id="field-exchange-rate-to-usd-add-more-wrapper">',
		'#suffix' => '</div></div>',
	);
	$form['field_discount_rate_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Discount Rate'),
		'#default_value' => $field_discount_rate,
		'#prefix' => '<div class="row"><div class="col-sm-12 col-md-7 col-lg-7">',
		'#suffix' => '</div></div>',
	);
	/*$form['field_om_pct_treatment_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('O&M % of CI Cost'),
		'#default_value' => $field_om_pct_treatment,
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);*/
	/*$form['field_design_horizon_treatment_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Design Horizon'),
		'#default_value' => $field_design_horizon_treatment,
		'#prefix' => '<div class="row"><div class="col-sm-12 col-md-7 col-lg-7">',
		'#suffix' => '</div></div>',
	);*/
	/*$form['field_ci_cost_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Capital Investment Cost'),
		'#default_value' => $field_ci_cost,
		'#prefix' => '<div class="row"><div class="col-sm-6">',
		'#suffix' => '</div></div>',
	);*/

	$form['field_land_cost_und_0_value'] = array(
		'#type' => 'textfield',
		'#title' => t('Land Cost <span class="label-unit">(per m<sup>2</sup>)</span>'),
		'#default_value' => $field_land_cost,
		'#prefix' => '<div class="row"><div class="col-sm-12 col-md-7 col-lg-7">',
		'#suffix' => '</div></div>',
	);

	// field_discount_rate_reticulation
	// field_om_pct_reticulation
	// field_design_horizon_reticulatn
	
	$effluent_vocab = taxonomy_vocabulary_machine_name_load('effluent_standard');
	$effluent_terms  = wamex_get_selectbox_contents($effluent_vocab->vid);
	$effluent_opts = $effluent_terms;
	$effluent_taxonomy_tree = taxonomy_get_tree($effluent_vocab->vid,0,NULL,TRUE);
	// get all term ids
	$effluent_tids = array();
	foreach($effluent_taxonomy_tree as $term) {
		$effluent_tids[] = $term->tid;
	}
	// load all terms
	$effluent_terms2 = taxonomy_term_load_multiple($effluent_tids);
	
	// add terms to Drupal.settings
	// access in JS via Drupal.settings.taxonomy.effluent
	drupal_add_js(array('taxonomy' => array('effluentStandards' => $effluent_taxonomy_tree)), 'setting');

	
	$form['field_effluent_standard'] = array(
		'#title' => t('Effluent Standard'),
		'#type' => 'select',
		'#options' => $effluent_opts,
		'#default_value' => $field_effluent_standard,
		'#prefix' => '<hr/><div class="row"><div class="col-sm-12 col-md-7 col-lg-7">',
		'#suffix' => '</div></div>',
	);
	
	$form['field_cod'] = array(
		'#title' => t('<span class="label-name">COD</span><br/><span class="label-unit">(mg/l)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
		'#prefix' => '<div class="row" id="project-effluent-standard-values"><div class="effluent-standard-attribute col-sm-10 col-sm-offset-2 col-md-8 col-md-offset-2 col-lg-2 col-lg-offset-2 ">',
		'#suffix' => '</div>', //</div>',
	);

	$form['field_bod5'] = array(
		'#title' => t('<span class="label-name">BOD5</span><br/><span class="label-unit">(mg/l)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
		'#prefix' => '<div class="effluent-standard-attribute col-sm-10 col-sm-offset-2 col-md-8 col-md-offset-2 col-lg-2 col-lg-offset-0">',
		'#suffix' => '</div>',
	);

	$form['field_totn'] = array(
		'#title' => t('<span class="label-name">TotN</span><br/><span class="label-unit">(mg/l)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
		'#prefix' => '<div class="effluent-standard-attribute col-sm-10 col-sm-offset-2 col-md-8 col-md-offset-2 col-lg-2 col-lg-offset-0">',
		'#suffix' => '</div>',
	);

	$form['field_totp'] = array(
		'#title' => t('<span class="label-name">TotP</span><br/><span class="label-unit">(mg/l)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
		'#prefix' => '<div class="effluent-standard-attribute col-sm-10 col-sm-offset-2 col-md-8 col-md-offset-2 col-lg-2 col-lg-offset-0">',
		'#suffix' => '</div>',
	);

	$form['field_tss'] = array(
		'#title' => t('<span class="label-name">TSS</span><br/><span class="label-unit">(mg/l)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
		'#prefix' => '<div class="effluent-standard-attribute col-sm-10 col-sm-offset-2 col-md-8 col-md-offset-2 col-lg-2 col-lg-offset-0">',
		'#suffix' => '</div></div>',
	);
  
  // land area
  /*$form['field_land_area'] = array(
    '#title' => t('<span class="label-name">Land Area</span> <span class="label-unit">(m<sup>2</sup>)</span>'),
    '#type' => 'textfield',
    '#default_value' => $field_land_area,
		//'#prefix' => '<div class="row"><div class="col-sm-12 col-md-7 col-lg-7">',
		//'#suffix' => '</div></div>',
  );
  
  // population density
  $form['field_population_density'] = array(
    '#title' => t('<span class="label-name">Population Density</span><br/><span class="label-unit">(persons per m<sup>2</sup>)</span>'),
    '#type' => 'textfield',
    '#default_value' => $field_population_density,
		//'#prefix' => '<div class="row"><div class="col-sm-12 col-md-7 col-lg-7">',
		//'#suffix' => '</div></div>',
  );
  
  hide($form['field_land_area']);
  hide($form['field_population_density']);*/
 

	$form['actions']['submit']['#type'] = 'submit';
	$form['actions']['submit']['#ajax']['type'] = 'throbber';
	$form['actions']['submit']['#ajax']['callback'] = 'wamex_project_form_submit';
	//$form['actions']['cancel']['#prefix'] = '<div class="col-sm-1">';
	//$form['actions']['cancel']['#suffix'] = '</div>';
	$form['actions']['cancel']['#type'] = 'button';
	$form['actions']['cancel']['#value'] = t('Cancel');
	$form['actions']['cancel']['#attributes']['id'] = 'cancel-project';
	$form['actions']['cancel']['#attributes']['class'][] = 'btn';
	$form['actions']['cancel']['#attributes']['class'][] = 'btn-default';
	//$form['actions']['cancel']['#attributes']['class'][] = 'btn-xs';
	
  
	if ($nid){
		// edit existing
		$form['nid']['#type'] = 'hidden';
		$form['nid']['#value'] = $nid;
		$form['actions']['submit']['#value'] = t('Update Project');
	} else {
		// add new
		$form['actions']['submit']['#value'] = t('Save Project');
	}
	
	return $form;
	
}

function wamex_project_retic_form($form, &$form_state, $nid = null){
  if ($nid) {
    $node = node_load($nid);
    $field_land_area = (isset($node->field_land_area['und']) ? $node->field_land_area['und'][0]['value'] : NULL);
    $field_population_density = (isset($node->field_population_density['und']) ? $node->field_population_density['und'][0]['value'] : NULL);
    $field_sewerage_type = (isset($node->field_sewerage_type['und']) ? $node->field_sewerage_type['und'][0]['value'] : NULL);
    $field_pipe_length = (isset($node->field_pipe_length['und']) ? $node->field_pipe_length['und'][0]['value'] : NULL);
    $field_terrain_type = (isset($node->field_terrain_type['und']) ? $node->field_terrain_type['und'][0]['value'] : NULL);
  }
  else {
    $node = NULL;
    $field_land_area = 0;
    $field_population_density = 0;
    $field_sewerage_type = null;
    $field_pipe_length = 0;
    $field_terrain_type = null;
  }

  // land area
  $form['field_land_area'] = array(
    '#title' => t('<span class="label-name">Land Area</span> <span class="label-unit">(m<sup>2</sup>)</span>'),
    '#type' => 'textfield',
    '#default_value' => $field_land_area,
		//'#prefix' => '<div class="row"><div class="col-sm-12 col-md-7 col-lg-7">',
		//'#suffix' => '</div></div>',
  );
  
  // population density
  /*$form['field_population_density'] = array(
    '#title' => t('<span class="label-name">Population Density</span><br/><span class="label-unit">(persons per m<sup>2</sup>)</span>'),
    '#type' => 'textfield',
    '#default_value' => $field_population_density,
		//'#prefix' => '<div class="row"><div class="col-sm-12 col-md-7 col-lg-7">',
		//'#suffix' => '</div></div>',
  );*/
  
  $field_sewerage_type_info = field_info_field('field_sewerage_type');
  $field_sewerage_type_options = list_allowed_values($field_sewerage_type_info);
  $form['field_sewerage_type'] = array(
    '#title' => t('<span class="label-name">Type of Sewerage</span>'),
    '#type' => 'select',
    '#options' => $field_sewerage_type_options,
    '#default_value' => $field_sewerage_type,
  );
  
  $form['field_pipe_length'] = array(
    '#title' => t('<span class="label-name">Pipe Length</span><br/><span class="label-unit">(m)</span>'),
    '#type' => 'textfield',
    '#default_value' => $field_pipe_length,
  ); 
  
  $field_terrain_type_info = field_info_field('field_terrain_type');
  $field_terrain_type_options = list_allowed_values($field_terrain_type_info);
  $form['field_terrain_type'] = array(
    '#title' => t('<span class="label-name">Type of Sewerage</span>'),
    '#type' => 'select',
    '#options' => $field_terrain_type_options,
    '#default_value' => $field_terrain_type,
  );
  
	$form['actions']['submit']['#type'] = 'button';
	$form['actions']['submit']['#id'] = 'edit-retic-submit';
  $form['actions']['submit']['#value'] = t('<span class="glyphicon glyphicon-floppy-save"></span>&nbsp;Save');
	$form['actions']['submit']['#ajax']['type'] = 'throbber';
	$form['actions']['submit']['#ajax']['callback'] = 'wamex_project_retic_form_submit';
	$form['nid']['#type'] = 'hidden';
	$form['nid']['#value'] = $nid;
  
  return $form;  
}

function wamex_project_retic_form_submit($form, &$form_state){
	ctools_include('ajax');
	ctools_add_js('ajax-responder');
	$errors = form_get_errors();
	$commands = array();
	drupal_get_messages();
	
	if(!empty($errors)){
		$selector = '#retic-messages';
		$error_variables = array(
			'items' => $errors,
			'title' => 'Edit Collection and Conveyance Errors',
			'type' => 'ul',
		);
		drupal_set_message(theme_item_list($errors),'error');
    $commands[] = ajax_command_html($selector, '<div class = "error-msgs">' .theme('status_messages'). '</div>');
		return array('#type' => 'ajax', '#commands' => $commands);
	}
	else {
		
		if (!empty($form_state['values']['nid'])){
			//drupal_set_message('form_state:'.print_r($form_state['input'],1),'status');
			$node = node_load($form_state['values']['nid']);
			$node->field_land_area[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_land_area'];
			$node->field_population_density[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_population_density'];
			$node->field_sewerage_type[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_sewerage_type'];
			$node->field_pipe_length[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_pipe_length'];
			$node->field_terrain_type[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_terrain_type'];
			$node = node_submit($node);
			try {
				node_save($node);
				$success = TRUE;
				drupal_set_message(t('Project <b>'.$node->title.'</b> updated.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t($e->getMessage().'<br/>Project not updated.'),'error');
			}
		}
		else {
			drupal_set_message('Error saving Project!','error');
			$success = FALSE;
		}
		
		if ($success){
			$form_state['redirect'] = array('node/'.$form_state['values']['nid'], array('fragment'=>'reticulation'));
			$commands[] = ctools_ajax_command_reload();
			return array('#type' => 'ajax', '#commands' => $commands);
		} 
	}
}


function wamex_project_effl_form($form, &$form_state, $nid = null){
	//drupal_set_message('nid = '.$nid,'status');
	if ($nid) {
		$node = node_load($nid);
		$field_effluent_standard = (is_null($node->field_effluent_standard) ? NULL : $node->field_effluent_standard['und'][0]['tid']);
		$field_cod = (is_null($node->field_loading_cod) ? NULL : $node->field_loading_cod['und'][0]['value']);
		$field_bod5 = (is_null($node->field_loading_bod5) ? NULL : $node->field_loading_bod5['und'][0]['value']);
		$field_totn = (is_null($node->field_loading_totn) ? NULL : $node->field_loading_totn['und'][0]['value']);
		$field_totp = (is_null($node->field_loading_totp) ? NULL : $node->field_loading_totp['und'][0]['value']);
		$field_tss = (is_null($node->field_loading_tss) ? NULL : $node->field_loading_tss['und'][0]['value']);
	} 
	else {
		$node = NULL;
		$field_effluent_standard = '';
		$field_cod = 0;
		$field_bod5 = 0;
		$field_totn = 0;
		$field_totp = 0;
		$field_tss = 0;
	}
	
	$effluent_vocab = taxonomy_vocabulary_machine_name_load('effluent_standard');
	$effluent_terms  = wamex_get_selectbox_contents($effluent_vocab->vid);
	$effluent_opts = $effluent_terms;
	
	$form['field_effluent_standard'] = array(
		'#title' => t('Effluent Standard'),
		'#type' => 'select',
		'#options' => $effluent_opts,
	);
		$form['field_effluent_standard']['#attributes']['class'][] = "input-sm";

	
	$form['field_cod'] = array(
		'#title' => t('<span class="label-name">COD</span><br/><span class="label-unit">(mg/&#x2113;)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
	);
	$form['field_cod']['#attributes']['class'][] = "input-sm";

	$form['field_bod5'] = array(
		'#title' => t('<span class="label-name">BOD5</span><br/><span class="label-unit">(mg/&#x2113)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
	);
	$form['field_bod5']['#attributes']['class'][] = "input-sm";

	$form['field_totn'] = array(
		'#title' => t('<span class="label-name">TotN</span><br/><span class="label-unit">(mg/&#x2113)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
	);
	$form['field_totn']['#attributes']['class'][] = "input-sm";

	$form['field_totp'] = array(
		'#title' => t('<span class="label-name">TotP</span><br/><span class="label-unit">(mg/&#x2113)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
	);
	$form['field_totp']['#attributes']['class'][] = "input-sm";

	$form['field_tss'] = array(
		'#title' => t('<span class="label-name">TSS</span><br/><span class="label-unit">(mg/&#x2113)</span>'),
		'#type' => 'textfield',
		'#default_value' => 0,
	);
	$form['field_tss']['#attributes']['class'][] = "input-sm";

	
	//$form['field_effluent_standard']['#prefix'] = '<div class="col-sm-6">';
	//$form['field_effluent_standard']['#suffix'] = '</div>';
	$form['field_effluent_standard']['#attributes']['id'] = 'project-effluent-standard';
	$form['field_effluent_standard']['#title'] = t('Select a Standard');
	$form['field_effluent_standard']['#value'] = $field_effluent_standard;
	//$form['field_cod']['#prefix'] = '<div class="col-sm-2 project-effluent-attribute" id="project-effluent-cod">';
	//$form['field_cod']['#suffix'] = '</div>';
	$form['field_cod']['#value'] = $field_cod;
	$form['field_cod']['#attributes']['disabled'] = 'disabled';
	//$form['field_bod5']['#prefix'] = '<div class="col-sm-2 project-effluent-attribute" id="project-effluent-bod5">';
	//$form['field_bod5']['#suffix'] = '</div>';
	$form['field_bod5']['#value'] = $field_bod5;
	$form['field_bod5']['#attributes']['disabled'] = 'disabled';
	//$form['field_totn']['#prefix'] = '<div class="col-sm-2 project-effluent-attribute" id="project-effluent-totn">';
	//$form['field_totn']['#suffix'] = '</div>';
	$form['field_totn']['#value'] = $field_totn;
	$form['field_totn']['#attributes']['disabled'] = 'disabled';
	//$form['field_totp']['#prefix'] = '<div class="col-sm-2 project-effluent-attribute" id="project-effluent-totp">';
	//$form['field_totp']['#suffix'] = '</div>';
	$form['field_totp']['#value'] = $field_totp;
	$form['field_totp']['#attributes']['disabled'] = 'disabled';
	//$form['field_tss']['#prefix'] = '<div class="col-sm-2 project-effluent-attribute" id="project-effluent-tss">';
	//$form['field_tss']['#suffix'] = '</div>';
	$form['field_tss']['#value'] = $field_tss;
	$form['field_tss']['#attributes']['disabled'] = 'disabled';
	//$form['actions']['submit']['#prefix'] = '<div class="col-sm-6"><label>&nbsp;</label>';
	$form['actions']['submit']['#type'] = 'button';
	$form['actions']['submit']['#id'] = 'edit-effl-submit';
	//$form['actions']['submit']['#attributes']['class'][] = 'hidden';
	$form['actions']['submit']['#value'] = t("<span class='glyphicon glyphicon-floppy-save'></span>&nbsp;Save");
	$form['actions']['submit']['#ajax']['type'] = 'throbber';
	$form['actions']['submit']['#ajax']['callback'] = 'wamex_project_effl_form_submit';
	//$form['actions']['submit']['#suffix'] = '</div>';
	$form['nid']['#type'] = 'hidden';
	$form['nid']['#value'] = $nid;
	
	return $form;
}

function wamex_project_effl_form_submit($form, &$form_state){
	ctools_include('ajax');
	ctools_add_js('ajax-responder');
	$errors = form_get_errors();
	$commands = array();
	drupal_get_messages();
	
	if(!empty($errors)){
		$selector = '#effluent-standards-messages';
		$error_variables = array(
			'items' => $errors,
			'title' => 'Edit Effluent Standard Errors',
			'type' => 'ul',
		);
		drupal_set_message(theme_item_list($errors),'error');
		//drupal_set_message('this','error');
		//$form_state['redirect'] = 'dashboard';
    $commands[] = ajax_command_html($selector, '<div class = "error-msgs">' .theme('status_messages'). '</div>');
		return array('#type' => 'ajax', '#commands' => $commands);
	}
	else {
		
		if (!empty($form_state['values']['nid'])){
			//drupal_set_message('form_state:'.print_r($form_state['input'],1),'status');
			$node = node_load($form_state['values']['nid']);
			$node->field_effluent_standard[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_effluent_standard'];
			$node->field_loading_cod[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_cod'];
			$node->field_loading_bod5[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_bod5'];
			$node->field_loading_totp[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_totp'];
			$node->field_loading_totn[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_totn'];
			$node->field_loading_tss[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_tss'];
			$node = node_submit($node);
			try {
				node_save($node);
				$success = TRUE;
				drupal_set_message(t('Project <b>'.$node->title.'</b> updated.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t($e->getMessage().'<br/>Project not updated.'),'error');
			}
		}
		else {
			drupal_set_message('Error saving Project!','error');
			$success = FALSE;
		}
		
		if ($success){
			$form_state['redirect'] = array('node/'.$form_state['values']['nid'], array('fragment'=>'standards'));
			//$redir_url = l('asdf',$form_state['redirect'],array('fragment'=>'standards'));
			//drupal_set_message($redir_url);
			$commands[] = ctools_ajax_command_reload();
			//$commands[] = ctools_ajax_command_redirect('node/'.$form_state['values']['nid'],0,array('fragment'=>'standards'));
			return array('#type' => 'ajax', '#commands' => $commands);
		} 
	}
}

function wamex_project_form_submit($form, &$form_state){
	ctools_include('ajax');
	ctools_add_js('ajax-responder');
	$errors = form_get_errors();
	$commands = array();
	drupal_get_messages();

	// check for form errors
	if(!empty($errors)) { 
		// if there are errors, display them in the container with id=$selector
		$selector = '#dashboard-messages';
		$error_variables = array(
			'items'=> $errors,
			'title'=> 'Add New Project Errors',
			'type'=> 'ul',
		);
		drupal_set_message(theme_item_list($errors),'error');
		drupal_set_message('this','error');
		//$form_state['redirect'] = 'dashboard';
    $commands[] = ajax_command_html($selector, '<div class = "error-msgs">' .theme('status_messages'). '</div>');
		return array('#type' => 'ajax', '#commands' => $commands);
	} 
	else {
		// if there are no errors, attempt to save the node
		//drupal_set_message('form has no errors','status');
		//$success = NULL;
		if (empty($form_state['values']['nid'])){
			// add new node
			global $user;
			$newnode = new stdClass();
			$newnode->title = $form_state['input']['title'];
			$newnode->language = LANGUAGE_NONE;
			$newnode->type = 'project';
			$newnode->uid = $user->uid;
			$newnode->body[LANGUAGE_NONE][0]['value'] = $form_state['input']['body'];
			$newnode->body[LANGUAGE_NONE][0]['format'] = 'plain_text';
			$newnode->field_location[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_location'];
			$newnode->field_population[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_population_und_0_value'];
			$newnode->field_author[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_author'];
			$newnode->field_discount_rate[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_discount_rate_und_0_value'];
			//$newnode->field_om_pct_treatment[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_om_pct_treatment_und_0_value'];
			//$newnode->field_design_horizon_treatment[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_design_horizon_treatment_und_0_value'];
			//$newnode->field_ci_cost[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_ci_cost_und_0_value'];
			$newnode->field_currency[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_currency_und'];
			$newnode->field_exchange_rate_to_usd[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_exchange_rate_to_usd_und_0_value'];
			$newnode->field_effluent_standard[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_effluent_standard'];
			$newnode->field_loading_cod[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_cod'];
			$newnode->field_loading_bod5[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_bod5'];
			$newnode->field_loading_totp[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_totp'];
			$newnode->field_loading_totn[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_totn'];
			$newnode->field_loading_tss[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_tss'];
			$newnode->field_land_cost[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_land_cost_und_0_value'];
      $newnode->field_land_area[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_land_area'];
      $newnode->field_population_density[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_population_density'];
			// field_discount_rate_reticulation
			// field_om_pct_treatment
			// field_om_pct_reticulation
			// field_design_horizon_treatment
			// field_design_horizon_reticulatn
			$newnode = node_submit($newnode);

			try {
				node_save($newnode);
				$success = TRUE;
				drupal_set_message(t('Project <b>'.$newnode->title.'</b> created.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t($e->getMessage().'<br/>New project not saved.'),'error');
			}
		}
		else {
			// update existing node
			$node = node_load($form_state['values']['nid']);
			$node->title = $form_state['input']['title'];
			$node->language = LANGUAGE_NONE;
			$node->body[LANGUAGE_NONE][0]['value'] = $form_state['input']['body'];
			$node->field_location[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_location'];
			$node->field_population[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_population_und_0_value'];
			$node->field_author[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_author'];
			$node->field_discount_rate[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_discount_rate_und_0_value'];
			$node->field_om_pct_treatment[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_om_pct_treatment_und_0_value'];
			$node->field_design_horizon_treatment[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_design_horizon_treatment_und_0_value'];
			//$node->field_ci_cost[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_ci_cost_und_0_value'];
			$node->field_currency[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_currency_und'];
			$node->field_exchange_rate_to_usd[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_exchange_rate_to_usd_und_0_value'];
			$node->field_effluent_standard[LANGUAGE_NONE][0]['tid'] = $form_state['input']['field_effluent_standard'];
			$node->field_loading_cod[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_cod'];
			$node->field_loading_bod5[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_bod5'];
			$node->field_loading_totp[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_totp'];
			$node->field_loading_totn[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_totn'];
			$node->field_loading_tss[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_tss'];
			$node->field_land_cost[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_land_cost_und_0_value'];
      $node->field_land_area[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_land_area'];
      $node->field_population_density[LANGUAGE_NONE][0]['value'] = $form_state['input']['field_population_density'];
			// field_discount_rate_reticulation
			// field_om_pct_treatment
			// field_om_pct_reticulation
			// field_design_horizon_treatment
			// field_design_horizon_reticulatn
			$node = node_submit($node);
			try {
				node_save($node);
				$success = TRUE;
				drupal_set_message(t('Project <b>'.$node->title.'</b> updated.'));
			} 
			catch (Exception $e) {
				// Do your error handling here.
				$success = FALSE;
				drupal_set_message(t($e->getMessage().'<br/>Project not updated.'),'error');
			}
		}

		if ($success){
			$path = current_path();
			$path_tokens = explode('/',$path);
			if (in_array('project',$path_tokens)){
				$redir = 'dashboard';
				$form_state['redirect'] = array($redir);
				$commands[] = ctools_ajax_command_reload();
			} 
			else {
				$redir = 'node/'.$form_state['build_info']['args'][0];
				$form_state['redirect'] = array($redir);
				$commands[] = ctools_ajax_command_redirect($redir);
			}
			//drupal_set_message($redir);
			return array('#type' => 'ajax', '#commands' => $commands);
		} 
	}
	//return;
}

function wamex_project_delete_confirm($form, $form_state, $nid){
	$node = node_load($nid);
	$project_name = $node->title;
  if (user_access('delete project custom')) {
		$form['nid'] = array('#type' => 'hidden', '#value' => $nid);
    $output = confirm_form($form,
      t('Are you sure you want to delete %title?', array('%title' => $project_name)),
      isset($_GET['destination']) ? $_GET['destination'] : 'dashboard',
			t('Are you sure you want to delete %title? This action cannot be undone.', array('%title' => $project_name)),
			t('Yes'),
			t('No'));
  } else {
		$output = "Error!";
	}
  return $output;
}

function wamex_project_delete_confirm_submit($form, &$form_state){
  if ($form_state['values']['confirm']) {
		try{
			node_delete($form_state['values']['nid']);
			$success = TRUE;
			drupal_set_message(t('The project has been deleted.'),'status');
		}
		catch (Exception $e){
			$success = FALSE;
			drupal_set_message(t('Could not delete the project.'),'error');
		}
	
    $form_state['redirect'] = 'dashboard';
    return;
  }
}



function wamex_project_popeq_form($form, &$form_state){
	$popeq_parameters = array(
		'cod'=>t('COD'),
		'bod5'=>t('BOD5'),
		'totn'=>t('TotN'),
		'totp'=>t('TotP'),
		'tss'=>t('TSS'),
		'volc'=>t('Vol/C'),
	);

	foreach ($popeq_parameters as $popeq_parameter => $name){
		$form['popeq_parameter'][$name] = array(
			'#type' => 'radio',
			'#value' => 'default',
			//'#default_value' => t('cod'),
			'#return_value' => $popeq_parameter,
			'#title' => $name."<br/><span class=\"label-unit\">(mg/&#x2113;)</span>",
			'#parents' => array('popeq_parameter'),
			'#attributes' => array('class'=>array('popeq-parameter-radio','popeq-parameter-radio-'.$popeq_parameter)),
		);
	}
	
	//$form['popeq_parameter'][LANGUAGE_NONE][0]['value']['#default_value'] = array('cod');
	
	$form['popeq_pol']['pol-cod'] = array(
		'#type' => 'textfield',
		'#title'=> '',
		'#default_value'=> 100,
	);
	$form['popeq_pol']['pol-cod']['#attributes']['class'][] = 'popeq-parameter';
	$form['popeq_pol']['pol-cod']['#attributes']['class'][] = 'input-sm';
	$form['popeq_pol']['pol-cod']['#attributes']['min'] = 0;
	
	$form['popeq_pol']['pol-bod5'] = array(
		'#type' => 'textfield',
		'#title'=> '',
		'#default_value'=> 54,
	);
	$form['popeq_pol']['pol-bod5']['#attributes']['class'][] = 'popeq-parameter';
	$form['popeq_pol']['pol-bod5']['#attributes']['class'][] = 'input-sm';
	$form['popeq_pol']['pol-bod5']['#attributes']['min'] = 0;
	
	$form['popeq_pol']['pol-totn'] = array(
		'#type' => 'textfield',
		'#title'=> '',
		'#default_value'=> 5,
	);
	$form['popeq_pol']['pol-totn']['#attributes']['class'][] = 'popeq-parameter';
	$form['popeq_pol']['pol-totn']['#attributes']['class'][] = 'input-sm';
	$form['popeq_pol']['pol-totn']['#attributes']['min'] = 0;
	
	$form['popeq_pol']['pol-totp'] = array(
		'#type' => 'textfield',
		'#title'=> '',
		'#default_value'=> 1,
	);
	$form['popeq_pol']['pol-totp']['#attributes']['class'][] = 'popeq-parameter';
	$form['popeq_pol']['pol-totp']['#attributes']['class'][] = 'input-sm';
	$form['popeq_pol']['pol-totp']['#attributes']['min'] = 0;
	
	$form['popeq_pol']['pol-tss'] = array(
		'#type' => 'textfield',
		'#title'=> '',
		'#default_value'=> 68,
	);
	$form['popeq_pol']['pol-tss']['#attributes']['class'][] = 'popeq-parameter';
	$form['popeq_pol']['pol-tss']['#attributes']['class'][] = 'input-sm';
	$form['popeq_pol']['pol-tss']['#attributes']['min'] = 0;
	
	$form['popeq_pol']['pol-volc'] = array(
		'#type' => 'textfield',
		'#title'=> '',
		'#default_value'=> 200,
	);
	$form['popeq_pol']['pol-volc']['#attributes']['class'][] = 'popeq-parameter';
	$form['popeq_pol']['pol-volc']['#attributes']['class'][] = 'input-sm';
	$form['popeq_pol']['pol-volc']['#attributes']['min'] = 0;
	
	return $form;
}

function wamex_ajax_get_ajax() {
	// The function will receive the array of arguments after the "get/ajax" prefix
  $path = implode('/', func_get_args());
  $render_string = menu_execute_active_handler($path, FALSE);
  return $render_string;
}

function wamex_ajax_callback($page_callback_result) {
	// Only render content and validates return
  $content = is_string($page_callback_result) ? $page_callback_result : drupal_render($page_callback_result);
  print $content;
}

function wamex_user_login(&$edit, $account)
{
  // set $redirection to the desired location
  $redirection = 'dashboard';
	$_GET['destination'] = $redirection;
	// Unless there is already a redirection going, or the user is trying to reset his password, we redirect to $redirection.
  if (empty($_GET['destination'])
    && !is_null($redirection)
    && (!isset($_POST['form_id']) || $_POST['form_id'] != 'user_pass_reset'))
  {
    $_GET['destination'] = $redirection; // Should we use $edit['redirect'] instead..?
  } /*else {
		//drupal_set_message('ito','error');
		//drupal_set_message(print_r($_GET,1),'error');
		//drupal_set_message(print_r($_POST,1),'error');
		
	}*/
}

/*function wamex_breadcrumb($variables) {
	$breadcrumb = $variables['breadcrumb'];

	if (!empty($breadcrumb)) {
		$crumbs = '<ul class="breadcrumbs">';

		foreach($breadcrumb as $value) {
			$crumbs .= '<li>'.$value.'</li>';
		}
		$crumbs .= '</ul>';
	}
		
	$crumbs .= '<pre>'.print_r($variables,1).'</pre>';
	return $crumbs;
}*/